{"version":3,"file":"text-layout-consistency-modified-metrics-legacy-CVV-697L.js","sources":["../../tests/text-layout-consistency-modified-metrics.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2024 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { getLoremIpsum } from '../common/LoremIpsum.js';\n\nexport async function automation(settings: ExampleSettings) {\n  const next = await test(settings);\n  await settings.snapshot();\n  while (await next()) {\n    await settings.snapshot();\n  }\n}\n\n/**\n * Similar to `text-layout-consistency` but focuses on the consistency between\n * the canvas text renderer and the sdf text renderer when using a font with\n * modified metrics.\n *\n * Acceptable results: The baselines of the two text nodes overlap precisely.\n * Horizontal layout may vary.\n *\n * Ideal results: All text appears purple because both the horizontal and\n * vertical layout are consistent.\n *\n * Press the right arrow key to cycle through the different widths\n *\n * @param param0\n * @returns\n */\nexport default async function test({ renderer, testRoot }: ExampleSettings) {\n  const fontFamily = 'Ubuntu';\n  const fontFamilyModified = 'Ubuntu-Modified-Metrics';\n\n  const text = getLoremIpsum(1200);\n  const fontSize = 20;\n  const yPos = 0;\n  testRoot.width = 500;\n  testRoot.height = 500;\n  testRoot.clipping = true;\n  testRoot.color = 0xffffffff;\n\n  const canvasText = renderer.createTextNode({\n    y: yPos,\n    width: testRoot.width,\n    text,\n    fontSize,\n    fontFamily,\n    contain: 'width',\n    color: 0xff0000ff,\n    textRendererOverride: 'canvas',\n    parent: testRoot,\n  });\n  const sdfText = renderer.createTextNode({\n    y: yPos,\n    width: testRoot.width,\n    text,\n    fontSize,\n    fontFamily,\n    contain: 'width',\n    color: 0x0000ff77,\n    parent: testRoot,\n    zIndex: 3,\n  });\n  const indexInfo = renderer.createTextNode({\n    x: testRoot.width,\n    y: testRoot.height,\n    mount: 1,\n    width: 0,\n    height: 0,\n    color: 0x000000ff,\n    fontFamily: 'Ubuntu',\n    fontSize: 20,\n    text: '1',\n    parent: testRoot,\n  });\n\n  let i = 0;\n  const mutations = [\n    () => {\n      canvasText.fontFamily = sdfText.fontFamily = fontFamily;\n    },\n    () => {\n      canvasText.fontFamily = sdfText.fontFamily = fontFamilyModified;\n    },\n    () => {\n      canvasText.fontFamily = sdfText.fontFamily = fontFamily;\n    },\n  ];\n\n  /**\n   * Run the next mutation in the list\n   *\n   * @param idx\n   * @returns `false` if loop is set to false and we've already gone through all mutations. Otherwise `true`.\n   */\n  async function next(loop = false, idx = i + 1): Promise<boolean> {\n    if (idx > mutations.length - 1) {\n      if (!loop) {\n        return false;\n      }\n      idx = 0;\n    }\n    i = idx;\n    mutations[i]?.();\n    indexInfo.text = (i + 1).toString();\n    return true;\n  }\n  await next(false, 0);\n\n  window.addEventListener('keydown', (event) => {\n    // When right arrow is pressed, call next\n    if (event.key === 'ArrowRight') {\n      next(true).catch(console.error);\n    }\n  });\n\n  return next;\n}\n"],"names":["automation","settings","__async","_regeneratorRuntime","mark","_callee","next","wrap","_callee$","_context","prev","test","sent","snapshot","stop","_0","arguments","_ref","renderer","testRoot","_callee3","fontFamily","fontFamilyModified","text","fontSize","yPos","canvasText","sdfText","indexInfo","i","mutations","_callee3$","_context3","_next","loop","length","undefined","idx","_callee2","_a","_callee2$","_context2","abrupt","call","toString","getLoremIpsum","width","height","clipping","color","createTextNode","y","contain","textRendererOverride","parent","zIndex","x","mount","window","addEventListener","event","key","catch","console","error"],"mappings":"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"}