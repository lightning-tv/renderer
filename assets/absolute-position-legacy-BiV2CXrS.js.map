{"version":3,"file":"absolute-position-legacy-BiV2CXrS.js","sources":["../../tests/absolute-position.ts"],"sourcesContent":["import type { INode } from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  function createTextNode(container: INode, label?: string | undefined) {\n    const textNode = renderer.createTextNode({\n      x: 10,\n      y: 10,\n      text: `${label ? label + '\\n' : ''}X: ${container.x} => absX: ${\n        container.absX\n      }\\nY: ${container.y} => absY: ${container.absY}\\nMountX: ${\n        container.mountX\n      } | MountY: ${container.mountY}`,\n      parent: container,\n    });\n    return textNode;\n  }\n\n  /* Create a grid to show the values */\n  for (let index = 1; index <= Math.ceil(testRoot.width / 100); index++) {\n    renderer.createNode({\n      x: index * 100,\n      y: 0,\n      width: 2,\n      height: testRoot.height,\n      color: index % 5 ? 0xffffff40 : 0xffffffa0,\n      parent: testRoot,\n    });\n  }\n  for (let index = 1; index <= Math.ceil(testRoot.height / 100); index++) {\n    renderer.createNode({\n      x: 0,\n      y: index * 100,\n      width: testRoot.width,\n      height: 2,\n      color: index % 5 ? 0xffffff40 : 0xffffffa0,\n      parent: testRoot,\n    });\n  }\n\n  const defaultRect = renderer.createNode({\n    x: 100,\n    y: 100,\n    width: 200,\n    height: 200,\n    mountX: 0,\n    color: 0x00ff00ff,\n    parent: testRoot,\n  });\n  createTextNode(defaultRect, 'Default');\n\n  const mount1Rect = renderer.createNode({\n    x: 600,\n    y: 200,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    mount: 1,\n    parent: testRoot,\n  });\n  createTextNode(mount1Rect, 'Mount 1');\n\n  const scaleRect = renderer.createNode({\n    x: 700,\n    y: 100,\n    width: 200,\n    height: 200,\n    scale: 1.2,\n    color: 0xff0000ff,\n    parent: testRoot,\n  });\n  createTextNode(scaleRect, 'Scale 1.2');\n\n  const rotationPivot0Rect = renderer.createNode({\n    x: 1100,\n    y: 100,\n    width: 200,\n    height: 200,\n    rotation: Math.PI / 6,\n    pivot: 0,\n    color: 0xff0000ff,\n    parent: testRoot,\n  });\n  createTextNode(rotationPivot0Rect, 'Rotation Pivot 0');\n\n  const rotationPivot1Rect = renderer.createNode({\n    x: 1300,\n    y: 100,\n    width: 200,\n    height: 200,\n    rotation: Math.PI / 6,\n    pivot: 1,\n    color: 0xff0000ff,\n    parent: testRoot,\n  });\n  createTextNode(rotationPivot1Rect, 'Rotation Pivot 1');\n\n  const mountX1Rect = renderer.createNode({\n    x: 300,\n    y: 500,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    mountX: 1,\n    mountY: 0,\n    parent: testRoot,\n  });\n  createTextNode(mountX1Rect, 'MountX 1');\n\n  const mountY1Rect = renderer.createNode({\n    x: 400,\n    y: 600,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    mountX: 0,\n    mountY: 1,\n    parent: testRoot,\n  });\n  createTextNode(mountY1Rect, 'MountY 1');\n\n  const mountThirdRect = renderer.createNode({\n    x: 700,\n    y: 600,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    mountX: 0.33,\n    mountY: 0.66,\n    parent: testRoot,\n  });\n  createTextNode(mountThirdRect, 'MountX 0.33 MountY 0.66');\n\n  const mountScaleRect = renderer.createNode({\n    x: 1200,\n    y: 600,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    mountX: 1,\n    mountY: 0.5,\n    scale: 1.5,\n    parent: testRoot,\n  });\n  createTextNode(mountScaleRect, 'Mount and Scale 1.5');\n}\n"],"names":["absolutePosition","_0","__async","arguments","_ref","renderer","testRoot","_regeneratorRuntime","mark","_callee","createTextNode","index","_index","defaultRect","mount1Rect","scaleRect","rotationPivot0Rect","rotationPivot1Rect","mountX1Rect","mountY1Rect","mountThirdRect","mountScaleRect","wrap","_callee$","_context","prev","next","_createTextNode","container","label","textNode","x","y","text","concat","absX","absY","mountX","mountY","parent","Math","ceil","width","createNode","height","color","mount","scale","rotation","PI","pivot","stop"],"mappings":"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"}