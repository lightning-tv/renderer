{"version":3,"file":"text-contain-legacy-DTw_1t7I.js","sources":["../../tests/text-contain.ts"],"sourcesContent":["import type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { waitForLoadedDimensions } from '../common/utils.js';\n\nexport async function automation(settings: ExampleSettings) {\n  const next = await test(settings);\n  await settings.snapshot();\n  while (await next()) {\n    await settings.snapshot();\n  }\n}\n\n/**\n * Tests that text nodes with different contain settings and text renderers\n * are displayed correctly.\n *\n * Press the right arrow key to cycle through the different settings when\n * running in the browser.\n *\n * @param settings\n * @returns\n */\nexport default async function test(settings: ExampleSettings) {\n  const { renderer, testRoot } = settings;\n\n  // Set a smaller snapshot area\n  testRoot.width = 400;\n  testRoot.height = 400;\n  testRoot.color = 0xffffffff;\n\n  const textSizeAfterLoadingBg = renderer.createNode({\n    x: 5,\n    y: 5,\n    width: 0,\n    height: 0,\n    color: 0x22ff227f,\n    parent: testRoot,\n  });\n\n  const textReportedSizeBg = renderer.createNode({\n    x: textSizeAfterLoadingBg.x,\n    y: textSizeAfterLoadingBg.y,\n    width: 0,\n    height: 0,\n    color: 0xff11117f,\n    parent: testRoot,\n  });\n\n  const text1 = renderer.createTextNode({\n    x: textSizeAfterLoadingBg.x,\n    y: textSizeAfterLoadingBg.y,\n    width: 0,\n    height: 0,\n    color: 0x000000ff,\n    fontFamily: 'Ubuntu',\n    textRendererOverride: 'sdf',\n    fontSize: 20,\n    text: `Lorem ipsum dolor sit e\nConsectetur adipiscing elit. Vivamus id.\nSuspendisse sollicitudin posuere felis.\nVivamus consectetur ex magna, non mollis.`,\n    parent: testRoot,\n  });\n\n  const indexInfo = renderer.createTextNode({\n    x: testRoot.width,\n    y: testRoot.height,\n    mount: 1,\n    width: 0,\n    height: 0,\n    color: 0x000000ff,\n    fontFamily: 'Ubuntu',\n    fontSize: 20,\n    text: '1',\n    parent: testRoot,\n  });\n\n  const textSizeAfterLoadInfo = renderer.createTextNode({\n    x: testRoot.width,\n    y: testRoot.height - 20,\n    mount: 1,\n    width: 0,\n    height: 0,\n    color: 0x00ff00ff,\n    fontFamily: 'Ubuntu',\n    fontSize: 20,\n    text: '',\n    parent: testRoot,\n  });\n\n  const textReportedSizeInfo = renderer.createTextNode({\n    x: testRoot.width,\n    y: testRoot.height - 40,\n    mount: 1,\n    width: 0,\n    height: 0,\n    color: 0xff0000ff,\n    fontFamily: 'Ubuntu',\n    fontSize: 20,\n    text: '',\n    parent: testRoot,\n  });\n\n  const textSetDimsInfo = renderer.createTextNode({\n    x: testRoot.width,\n    y: testRoot.height - 60,\n    mount: 1,\n    width: 0,\n    height: 0,\n    color: 0x0000ffff,\n    fontFamily: 'Ubuntu',\n    fontSize: 20,\n    text: '',\n    parent: testRoot,\n  });\n\n  const header = renderer.createTextNode({\n    x: testRoot.width,\n    y: testRoot.height - 80,\n    mount: 1,\n    width: 0,\n    height: 0,\n    color: 0x000000ff,\n    fontFamily: 'Ubuntu',\n    fontSize: 20,\n    text: '',\n    parent: testRoot,\n  });\n\n  let i = 0;\n  const mutations = [\n    () => {\n      // SDF, contain none\n      text1.textRendererOverride = 'sdf';\n      text1.contain = 'none';\n      text1.width = 0;\n      text1.height = 0;\n    },\n    () => {\n      // SDF, contain width\n      text1.contain = 'width';\n      text1.width = 200;\n    },\n    () => {\n      // SDF, contain width (smaller)\n      text1.width = 195;\n    },\n    () => {\n      // SDF, contain both\n      text1.contain = 'both';\n      text1.height = 203;\n    },\n    () => {\n      // SDF, contain both (1 pixel larger to show another line)\n      text1.height = 204;\n    },\n    () => {\n      // Canvas, contain none\n      text1.textRendererOverride = 'canvas';\n      text1.contain = 'none';\n      text1.width = 0;\n      text1.height = 0;\n    },\n    () => {\n      // Canvas, contain width\n      text1.contain = 'width';\n      text1.width = 200;\n    },\n    () => {\n      // Canvas, contain width (smaller)\n      text1.contain = 'width';\n      text1.width = 195;\n      text1.height = 5;\n    },\n    () => {\n      // Canvas, contain both\n      text1.contain = 'both';\n      text1.height = 203;\n    },\n    () => {\n      // Canvas, contain both (1 pixel larger to show another line)\n      text1.height = 204;\n    },\n  ];\n  /**\n   * Run the next mutation in the list\n   *\n   * @param idx\n   * @returns `false` if loop is set to false and we've already gone through all mutations. Otherwise `true`.\n   */\n  async function next(loop = false, idx = i + 1): Promise<boolean> {\n    if (idx > mutations.length - 1) {\n      if (!loop) {\n        return false;\n      }\n      idx = 0;\n    }\n    i = idx;\n    mutations[i]?.();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    header.text = makeHeader(\n      text1.textRendererOverride!,\n      text1.contain,\n      text1.width,\n      text1.height,\n    );\n    indexInfo.text = (i + 1).toString();\n    textSetDimsInfo.text = `Set size: ${Math.round(text1.width)}x${Math.round(\n      text1.height,\n    )}`;\n    const dimensions = await waitForLoadedDimensions(text1);\n    textSizeAfterLoadingBg.width = text1.width;\n    textSizeAfterLoadingBg.height = text1.height;\n    textSizeAfterLoadInfo.text = `After 'loading' size: ${Math.round(\n      textSizeAfterLoadingBg.width,\n    )}x${Math.round(textSizeAfterLoadingBg.height)}`;\n    textReportedSizeBg.width = dimensions.width;\n    textReportedSizeBg.height = dimensions.height;\n    textReportedSizeInfo.text = `'loading' event size: ${Math.round(\n      textReportedSizeBg.width,\n    )}x${Math.round(textReportedSizeBg.height)}`;\n    return true;\n  }\n  await next(false, 0);\n\n  window.addEventListener('keydown', (event) => {\n    // When right arrow is pressed, call next\n    if (event.key === 'ArrowRight') {\n      next(true).catch(console.error);\n    }\n  });\n\n  return next;\n}\n\nfunction makeHeader(\n  renderer: string,\n  contain: string,\n  width: number,\n  height: number,\n) {\n  return `${renderer}, contain = ${contain}`;\n}\n"],"names":["automation","settings","__async","_regeneratorRuntime","mark","_callee","next","wrap","_callee$","_context","prev","test","sent","snapshot","stop","_callee3","renderer","testRoot","textSizeAfterLoadingBg","textReportedSizeBg","text1","indexInfo","textSizeAfterLoadInfo","textReportedSizeInfo","textSetDimsInfo","header","i","mutations","_callee3$","_context3","_next","arguments","loop","length","undefined","idx","_callee2","_a","dimensions","_callee2$","_context2","abrupt","call","text","makeHeader","textRendererOverride","contain","width","height","toString","concat","Math","round","waitForLoadedDimensions","color","createNode","x","y","parent","createTextNode","fontFamily","fontSize","mount","window","addEventListener","event","key","catch","console","error"],"mappings":"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"}