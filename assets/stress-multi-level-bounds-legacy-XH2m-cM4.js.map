{"version":3,"file":"stress-multi-level-bounds-legacy-XH2m-cM4.js","sources":["../../tests/stress-multi-level-bounds.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { type INode } from '@lightningjs/renderer';\nimport logo from '../assets/lightning.png';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nconst randomIntBetween = (from: number, to: number) =>\n  Math.floor(Math.random() * (to - from + 1) + from);\n\nexport default async function ({\n  renderer,\n  testRoot,\n  perfMultiplier,\n}: ExampleSettings) {\n  // create nodes\n  const numOuterNodes = 100 * perfMultiplier;\n  const nodes: INode[] = [];\n  let totalNodes = 0;\n\n  const bg = renderer.createNode({\n    width: 1920,\n    height: 1080,\n    color: 0xff1e293b,\n    parent: testRoot,\n  });\n\n  for (let i = 0; i < numOuterNodes; i++) {\n    const container = renderer.createNode({\n      x: Math.random() * (1920 * 2), //going to render out of bounds as well\n      y: Math.random() * (1080 * 2),\n      parent: bg,\n    });\n    const node = renderer.createNode({\n      width: 505,\n      height: 101,\n      src: logo,\n      parent: container,\n    });\n\n    nodes.push(container);\n    totalNodes += 2;\n  }\n\n  console.log(\n    `Created ${numOuterNodes} outer nodes with another node nested inside. Total nodes: ${totalNodes}`,\n  );\n\n  // create 100 animations\n  const animate = () => {\n    nodes.forEach((node) => {\n      node\n        .animate(\n          {\n            x: randomIntBetween(20, 1740 * 2), //going to render out of bounds as well\n            y: randomIntBetween(20, 900 * 2),\n          },\n          {\n            duration: 3000,\n            easing: 'ease-out',\n            loop: false,\n          },\n        )\n        .start();\n    });\n  };\n\n  setInterval(animate, 3000);\n}\n"],"names":["randomIntBetween","from","to","Math","floor","random","stressMultiLevelBounds","_0","__async","arguments","_ref","renderer","testRoot","perfMultiplier","_regeneratorRuntime","mark","_callee","numOuterNodes","nodes","totalNodes","bg","i","container","animate","wrap","_callee$","_context","prev","next","createNode","width","height","color","parent","x","y","src","logo","push","console","log","concat","forEach","node","duration","easing","loop","start","setInterval","stop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAuBA,IAAMA,gBAAmB,GAAA,SAAnBA,gBAAmBA,CAACC,IAAc,EAAAC,EAAA;UAAA,OACtCC,IAAK,CAAAC,KAAA,CAAMD,IAAK,CAAAE,MAAA,CAAA,CAAY,IAAAH,EAAA,GAAKD,IAAO,GAAA,CAAA,CAAA,GAAKA,IAAI,CAAA;QAAA;QAEnD,SAAAK,sBAAAA,CAA+BC,EAIX,EAAA;UAJW,OAAAC,OAAA,CAAA,IAAA,EAAAC,SAAA,EAAA,UAAAC,IAAA;YAAA,IAC7BC,QAAA,GAAAD,IAAA,CAAAC,QAAA;cACAC,QAAA,GAAAF,IAAA,CAAAE,QAAA;cACAC,cAAA,GAAAH,IAAA,CAAAG,cAAA;YAAA,oBAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;cAAA,IAAAC,aAAA,EAAAC,KAAA,EAAAC,UAAA,EAAAC,EAAA,EAAAC,CAAA,EAAAC,SAAA,EAAAC,OAAA;cAAA,OAAAT,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA;gBAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;kBAAA;oBAGMX,gBAAgB,GAAM,GAAAJ,cAAA;oBACtBK,QAAiB,EAAC;oBACpBC,UAAa,GAAA,CAAA;oBAEXC,EAAA,GAAKT,SAASkB,UAAW,CAAA;sBAC7BC,KAAO,EAAA,IAAA;sBACPC,MAAQ,EAAA,IAAA;sBACRC,KAAO,EAAA,UAAA;sBACPC,MAAQ,EAAArB;oBAAA,CACT,CAAA;oBAED,KAASS,CAAI,GAAA,CAAA,EAAGA,CAAI,GAAAJ,aAAA,EAAeI,CAAK,EAAA,EAAA;sBAChCC,SAAA,GAAYX,SAASkB,UAAW,CAAA;wBACpCK,CAAG,EAAA/B,IAAA,CAAKE,MAAO,EAAA,IAAK,IAAO,GAAA,CAAA,CAAA;wBAAA;wBAC3B8B,CAAG,EAAAhC,IAAA,CAAKE,MAAO,EAAA,IAAK,IAAO,GAAA,CAAA,CAAA;wBAC3B4B,MAAQ,EAAAb;sBAAA,CACT,CAAA;sBACYT,SAASkB,UAAW,CAAA;wBAC/BC,KAAO,EAAA,GAAA;wBACPC,MAAQ,EAAA,GAAA;wBACRK,GAAK,EAAAC,YAAA;wBACLJ,MAAQ,EAAAX;sBAAA,CACT,CAAA;sBAEDJ,KAAA,CAAMoB,KAAKhB,SAAS,CAAA;sBACNH,UAAA,IAAA,CAAA;oBAChB;oBAEQoB,OAAA,CAAAC,GAAA,YAAAC,MAAA,CACKxB,aAAa,iEAAAwB,MAAA,CAA8DtB,UAAU,CAAA,CAClG;oBAGMI,UAAU,SAAVA,UAAgB;sBACdL,KAAA,CAAAwB,OAAA,CAAQ,UAACC,IAAS,EAAA;wBAEnBA,IAAA,CAAApB,OAAA,CACC;0BACEW,CAAG,EAAAlC,gBAAA,CAAiB,EAAI,EAAA,IAAA,GAAO,CAAC,CAAA;0BAAA;0BAChCmC,CAAG,EAAAnC,gBAAA,CAAiB,EAAI,EAAA,GAAA,GAAM,CAAC;wBACjC,CAAA,EACA;0BACE4C,QAAU,EAAA,GAAA;0BACVC,MAAQ,EAAA,UAAA;0BACRC,IAAM,EAAA;wBACR,GAEDC,KAAM,CAAA,CAAA;sBAAA,CACV,CAAA;oBAAA,CACH;oBAEAC,WAAA,CAAYzB,SAAS,GAAI,CAAA;kBAAA;kBAAA;oBAAA,OAAAG,QAAA,CAAAuB,IAAA;gBAAA;cAAA,GAAAjC,OAAA;YAAA;UAAA,CAC3B,CAAA;QAAA;;;;"}