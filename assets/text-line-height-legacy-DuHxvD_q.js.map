{"version":3,"file":"text-line-height-legacy-DuHxvD_q.js","sources":["../../tests/text-line-height.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ITextNodeProps, RendererMain } from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { paginateTestRows, type TestRow } from '../common/paginateTestRows.js';\nimport { PageContainer } from '../common/PageContainer.js';\nimport { constructTestRow } from '../common/constructTestRow.js';\n\nexport async function automation(settings: ExampleSettings) {\n  // Snapshot all the pages\n  await (await test(settings)).snapshotPages();\n}\n\nexport default async function test(settings: ExampleSettings) {\n  const { renderer } = settings;\n  const pageContainer = new PageContainer(settings, {\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    title: 'Text Line Height',\n  });\n\n  await paginateTestRows(pageContainer, [\n    ...generateLineHeightTest(renderer, 'sdf'),\n    ...generateLineHeightTest(renderer, 'canvas'),\n  ]);\n\n  return pageContainer;\n}\n\nconst NODE_PROPS = {\n  x: 90,\n  y: 90,\n  mount: 0.5,\n  color: 0x000000ff,\n  text: 'abcd\\ntxyz',\n  fontFamily: 'Ubuntu',\n  textRendererOverride: 'sdf',\n  fontSize: 50,\n} satisfies Partial<ITextNodeProps>;\n\nfunction generateLineHeightTest(\n  renderer: RendererMain,\n  textRenderer: 'canvas' | 'sdf',\n): TestRow[] {\n  return [\n    {\n      title: `Text Node ('lineHeight', ${textRenderer}, fontSize=50)${\n        textRenderer === 'canvas' ? ', \"BROKEN!\"' : ''\n      }`,\n      content: async (rowNode) => {\n        const nodeProps = {\n          ...NODE_PROPS,\n          textRendererOverride: textRenderer,\n        } satisfies Partial<ITextNodeProps>;\n\n        const baselineNode = renderer.createTextNode({\n          ...nodeProps,\n        });\n        // const dimensions = await waitForTextDimensions(baselineNode);\n\n        // // Get the position for the center of the container based on mount = 0\n        // const position = {\n        //   y: 100 - dimensions.height / 2,\n        // };\n\n        // baselineNode.y = position.y;\n\n        return await constructTestRow(\n          { renderer, rowNode, containerSize: 180 },\n          [\n            'lineHeight: (default)\\n->',\n            baselineNode,\n            '60 ->',\n            renderer.createTextNode({\n              ...nodeProps,\n              lineHeight: 60,\n            }),\n            '70 ->',\n            renderer.createTextNode({\n              ...nodeProps,\n              lineHeight: 70,\n            }),\n            '25 ->',\n            renderer.createTextNode({\n              ...nodeProps,\n              lineHeight: 25,\n            }),\n            '10 ->',\n            renderer.createTextNode({\n              ...nodeProps,\n              lineHeight: 10,\n            }),\n            '1 ->',\n            renderer.createTextNode({\n              ...nodeProps,\n              lineHeight: 1,\n            }),\n          ],\n        );\n      },\n    },\n  ] satisfies TestRow[];\n}\n"],"names":["automation","settings","__async","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","test","sent","snapshotPages","stop","_callee2","renderer","pageContainer","_callee2$","_context2","PageContainer","width","appWidth","height","appHeight","title","paginateTestRows","concat","_toConsumableArray","generateLineHeightTest","abrupt","NODE_PROPS","x","y","mount","color","text","fontFamily","textRendererOverride","fontSize","textRenderer","_this","content","rowNode","_callee3","nodeProps","baselineNode","_callee3$","_context3","__spreadProps","createTextNode","__spreadValues","constructTestRow","containerSize","lineHeight"],"mappings":"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"}