{"version":3,"file":"clipping-legacy-BTD_5K_n.js","sources":["../../tests/clipping.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { paginateTestRows } from '../common/paginateTestRows.js';\nimport { PageContainer } from '../common/PageContainer.js';\nimport { waitForLoadedDimensions } from '../common/utils.js';\nimport { deg2Rad } from '@lightningjs/renderer/utils';\nimport type { INodeProps } from '@lightningjs/renderer';\nimport robotImg from '../assets/robot/robot.png';\n\nexport async function automation(settings: ExampleSettings) {\n  // Snapshot all the pages\n  await (await test(settings)).snapshotPages();\n}\n\nconst SQUARE_SIZE = 200;\nconst PADDING = 20;\n\nexport default async function test(settings: ExampleSettings) {\n  const { renderer } = settings;\n  const pageContainer = new PageContainer(settings, {\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    title: 'Clipping Tests',\n  });\n\n  await paginateTestRows(pageContainer, [\n    {\n      title:\n        'Standard node clips DIRECT children that are outside of its bounds',\n      content: async (rowNode) => {\n        let curX = 0;\n        /// TOP LEFT\n        const clipContainerTopLeft = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        renderer.createNode({\n          x: -100,\n          y: -100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          src: robotImg,\n          parent: clipContainerTopLeft,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        /// TOP RIGHT\n        const clipContainerTopRight = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        renderer.createNode({\n          x: 100,\n          y: -100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          src: robotImg,\n          parent: clipContainerTopRight,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        /// BOTTOM RIGHT\n        const clipContainerBottomRight = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        renderer.createNode({\n          x: 100,\n          y: 100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          src: robotImg,\n          parent: clipContainerBottomRight,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        /// BOTTOM LEFT\n        const clipContainerBottomLeft = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        renderer.createNode({\n          x: -100,\n          y: 100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          src: robotImg,\n          parent: clipContainerBottomLeft,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        // ALL SIDES\n        const clipAllSides = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        renderer.createNode({\n          x: -100,\n          y: -100,\n          width: SQUARE_SIZE * 2,\n          height: SQUARE_SIZE * 2,\n          src: robotImg,\n          parent: clipAllSides,\n        });\n        return SQUARE_SIZE;\n      },\n    },\n    {\n      title:\n        'Standard node clips ANCESTOR children that are outside of its bounds',\n      content: async (rowNode) => {\n        let curX = 0;\n\n        /// TOP LEFT\n        const clipContainerTopLeft = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        const clipContainerTopLeft2 = renderer.createNode({\n          parent: clipContainerTopLeft,\n        });\n        renderer.createNode({\n          x: -100,\n          y: -100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          src: robotImg,\n          parent: clipContainerTopLeft2,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        /// TOP RIGHT\n        const clipContainerTopRight = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        const clipContainerTopRight2 = renderer.createNode({\n          parent: clipContainerTopRight,\n        });\n        renderer.createNode({\n          x: 100,\n          y: -100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          src: robotImg,\n          parent: clipContainerTopRight2,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        /// BOTTOM RIGHT\n        const clipContainerBottomRight = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        const clipContainerBottomRight2 = renderer.createNode({\n          parent: clipContainerBottomRight,\n        });\n        renderer.createNode({\n          x: 100,\n          y: 100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          src: robotImg,\n          parent: clipContainerBottomRight2,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        /// BOTTOM LEFT\n        const clipContainerBottomLeft = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        const clipContainerBottomLeft2 = renderer.createNode({\n          parent: clipContainerBottomLeft,\n        });\n        renderer.createNode({\n          x: -100,\n          y: 100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          src: robotImg,\n          parent: clipContainerBottomLeft2,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        // ALL SIDES\n        const clipAllSides = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        const clipAllSides2 = renderer.createNode({\n          parent: clipAllSides,\n        });\n        renderer.createNode({\n          x: -100,\n          y: -100,\n          width: SQUARE_SIZE * 2,\n          height: SQUARE_SIZE * 2,\n          src: robotImg,\n          parent: clipAllSides2,\n        });\n\n        rowNode.height = SQUARE_SIZE;\n        return SQUARE_SIZE;\n      },\n    },\n    {\n      title:\n        'Nested clipping nodes clip children that are outside of their interesected bounds',\n      content: async (rowNode) => {\n        let curX = 0;\n        /// TOP LEFT\n        const clipContainerTopLeft = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        const clipContainerTopLeft2 = renderer.createNode({\n          x: -100,\n          y: -100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0xff0000ff,\n          src: robotImg,\n          parent: clipContainerTopLeft,\n          clipping: true,\n        });\n        renderer.createNode({\n          x: 50,\n          y: 50,\n          width: SQUARE_SIZE / 2,\n          height: SQUARE_SIZE / 2,\n          src: robotImg,\n          parent: clipContainerTopLeft2,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        /// TOP RIGHT\n        const clipContainerTopRight = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        const clipContainerTopRight2 = renderer.createNode({\n          x: -100,\n          y: -100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0xff0000ff,\n          src: robotImg,\n          parent: clipContainerTopRight,\n          clipping: true,\n        });\n        renderer.createNode({\n          x: 150,\n          y: 50,\n          width: SQUARE_SIZE / 2,\n          height: SQUARE_SIZE / 2,\n          src: robotImg,\n          parent: clipContainerTopRight2,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        /// BOTTOM RIGHT\n        const clipContainerBottomRight = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        const clipContainerBottomRight2 = renderer.createNode({\n          x: -100,\n          y: -100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0xff0000ff,\n          src: robotImg,\n          parent: clipContainerBottomRight,\n          clipping: true,\n        });\n        renderer.createNode({\n          x: 150,\n          y: 150,\n          width: SQUARE_SIZE / 2,\n          height: SQUARE_SIZE / 2,\n          src: robotImg,\n          parent: clipContainerBottomRight2,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        /// BOTTOM LEFT\n        const clipContainerBottomLeft = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        const clipContainerBottomLeft2 = renderer.createNode({\n          x: -100,\n          y: -100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0xff0000ff,\n          src: robotImg,\n          parent: clipContainerBottomLeft,\n          clipping: true,\n        });\n        renderer.createNode({\n          x: 50,\n          y: 150,\n          width: SQUARE_SIZE / 2,\n          height: SQUARE_SIZE / 2,\n          src: robotImg,\n          parent: clipContainerBottomLeft2,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        // ALL SIDES\n        const clipContainerAllSides = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0x00ff00ff,\n          parent: rowNode,\n          clipping: true,\n        });\n        const clipContainerAllSides2 = renderer.createNode({\n          x: -100,\n          y: -100,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          color: 0xff0000ff,\n          src: robotImg,\n          parent: clipContainerAllSides,\n          clipping: true,\n        });\n        renderer.createNode({\n          x: 50,\n          y: 50,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          src: robotImg,\n          parent: clipContainerAllSides2,\n        });\n        return SQUARE_SIZE;\n      },\n    },\n    {\n      title:\n        'Canvas text clips ANCESTOR text node children that is outside of its bounds',\n      content: async (rowNode) => {\n        const curX = 0;\n\n        const parent = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          parent: rowNode,\n          clipping: true,\n        });\n\n        renderer.createTextNode({\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          parent,\n          fontFamily: 'Ubuntu',\n          fontSize: 40,\n          color: 0x000000ff,\n          textRendererOverride: 'canvas',\n          text: 'Canvas ancestor clipping',\n        });\n\n        return SQUARE_SIZE;\n      },\n    },\n    {\n      title:\n        'SDF text clips ANCESTOR text node children that is outside of its bounds',\n      content: async (rowNode) => {\n        const curX = 0;\n\n        const parent = renderer.createNode({\n          x: curX,\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          parent: rowNode,\n          clipping: true,\n        });\n\n        renderer.createTextNode({\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          parent,\n          fontFamily: 'Ubuntu',\n          fontSize: 40,\n          color: 0x000000ff,\n          textRendererOverride: 'sdf',\n          text: 'SDF ancestor clipping',\n        });\n\n        return SQUARE_SIZE;\n      },\n    },\n    {\n      title: 'Clipping bounds are scaled with the `scale` property',\n      content: async (rowNode) => {\n        let curX = 0;\n\n        const containerProps = {\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          parent: rowNode,\n          color: 0x00ff00ff,\n          clipping: true,\n        } satisfies Partial<INodeProps>;\n\n        const clippingParentProps = {\n          mount: 0.5,\n          x: SQUARE_SIZE / 2,\n          y: SQUARE_SIZE / 2,\n          width: SQUARE_SIZE / 2,\n          height: SQUARE_SIZE / 2,\n          clipping: true,\n          // rotation: Math.PI / 4\n        } satisfies Partial<INodeProps>;\n\n        const clippingChildProps = {\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          mount: 0.5,\n          src: robotImg,\n        } satisfies Partial<INodeProps>;\n\n        const container = renderer.createNode({\n          ...containerProps,\n          x: curX,\n        });\n\n        const clippingParent = renderer.createNode({\n          ...clippingParentProps,\n          parent: container,\n        });\n\n        renderer.createNode({\n          ...clippingChildProps,\n          parent: clippingParent,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        const dim = await waitForLoadedDimensions(\n          renderer.createTextNode({\n            mountY: 0.5,\n            x: curX,\n            y: SQUARE_SIZE / 2,\n            text: 'scale 2 >',\n            parent: rowNode,\n          }),\n        );\n\n        curX += dim.width + PADDING;\n\n        const container2 = renderer.createNode({\n          ...containerProps,\n          x: curX,\n        });\n\n        const clippingParent2 = renderer.createNode({\n          ...clippingParentProps,\n          parent: container2,\n          scale: 2,\n        });\n\n        renderer.createNode({\n          ...clippingChildProps,\n          parent: clippingParent2,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        const dim2 = await waitForLoadedDimensions(\n          renderer.createTextNode({\n            mountY: 0.5,\n            x: curX,\n            y: SQUARE_SIZE / 2,\n            text: 'pivot 0 >',\n            parent: rowNode,\n          }),\n        );\n\n        curX += dim.width + PADDING;\n\n        const container3 = renderer.createNode({\n          ...containerProps,\n          x: curX,\n        });\n\n        const clippingParent3 = renderer.createNode({\n          ...clippingParentProps,\n          parent: container3,\n          scale: 2,\n          pivot: 0,\n        });\n\n        renderer.createNode({\n          ...clippingChildProps,\n          parent: clippingParent3,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        const dim3 = await waitForLoadedDimensions(\n          renderer.createTextNode({\n            mountY: 0.5,\n            x: curX,\n            y: SQUARE_SIZE / 2,\n            text: 'pivot 1 >',\n            parent: rowNode,\n          }),\n        );\n\n        curX += dim.width + PADDING;\n\n        const container4 = renderer.createNode({\n          ...containerProps,\n          x: curX,\n        });\n\n        const clippingParent4 = renderer.createNode({\n          ...clippingParentProps,\n          parent: container4,\n          scale: 2,\n          pivot: 1,\n        });\n\n        renderer.createNode({\n          ...clippingChildProps,\n          parent: clippingParent4,\n        });\n\n        return SQUARE_SIZE;\n      },\n    },\n    {\n      title: 'Clipping is automatically disabled when node is rotated',\n      content: async (rowNode) => {\n        let curX = 0;\n\n        const containerProps = {\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          parent: rowNode,\n          color: 0x00ff00ff,\n          clipping: true,\n        } satisfies Partial<INodeProps>;\n\n        const clippingParentProps = {\n          mount: 0.5,\n          x: SQUARE_SIZE / 2,\n          y: SQUARE_SIZE / 2,\n          width: SQUARE_SIZE / 2,\n          height: SQUARE_SIZE / 2,\n          clipping: true,\n        } satisfies Partial<INodeProps>;\n\n        const clippingChildProps = {\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          mount: 0.5,\n          src: robotImg,\n        } satisfies Partial<INodeProps>;\n\n        const container = renderer.createNode({\n          ...containerProps,\n          x: curX,\n        });\n\n        const clippingParent = renderer.createNode({\n          ...clippingParentProps,\n          parent: container,\n        });\n\n        renderer.createNode({\n          ...clippingChildProps,\n          parent: clippingParent,\n        });\n\n        curX += SQUARE_SIZE + PADDING;\n\n        const dimensions = await waitForLoadedDimensions(\n          renderer.createTextNode({\n            mountY: 0.5,\n            x: curX,\n            y: SQUARE_SIZE / 2,\n            text: 'rotate 45 degrees >',\n            parent: rowNode,\n          }),\n        );\n\n        curX += dimensions.width + PADDING;\n\n        const container2 = renderer.createNode({\n          ...containerProps,\n          x: curX,\n        });\n\n        const clippingParent2 = renderer.createNode({\n          ...clippingParentProps,\n          parent: container2,\n          rotation: deg2Rad(45),\n        });\n\n        renderer.createNode({\n          ...clippingChildProps,\n          parent: clippingParent2,\n        });\n\n        return SQUARE_SIZE;\n      },\n    },\n  ]);\n\n  return pageContainer;\n}\n"],"names":["automation","settings","__async","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","test","sent","snapshotPages","stop","SQUARE_SIZE","PADDING","_callee9","_this","renderer","pageContainer","_callee9$","_context9","PageContainer","width","appWidth","height","appHeight","title","paginateTestRows","content","rowNode","_callee2","curX","clipContainerTopLeft","clipContainerTopRight","clipContainerBottomRight","clipContainerBottomLeft","clipAllSides","_callee2$","_context2","createNode","x","color","parent","clipping","y","src","robotImg","abrupt","_callee3","clipContainerTopLeft2","clipContainerTopRight2","clipContainerBottomRight2","clipContainerBottomLeft2","clipAllSides2","_callee3$","_context3","_callee4","clipContainerAllSides","clipContainerAllSides2","_callee4$","_context4","_callee5","_callee5$","_context5","createTextNode","fontFamily","fontSize","textRendererOverride","text","_callee6","_callee6$","_context6","_callee7","containerProps","clippingParentProps","clippingChildProps","container","clippingParent","dim","container2","clippingParent2","container3","clippingParent3","container4","clippingParent4","_callee7$","_context7","mount","__spreadProps","__spreadValues","waitForLoadedDimensions","mountY","scale","pivot","_callee8","dimensions","_callee8$","_context8","rotation","deg2Rad"],"mappings":"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"}