{"version":3,"file":"texture-cleanup-critical-BQ_Vb4Db.js","sources":["../../tests/texture-cleanup-critical.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { RendererMainSettings } from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport function customSettings(): Partial<RendererMainSettings> {\n  return {\n    textureMemory: {\n      criticalThreshold: 100 * 1024 ** 2,\n      targetThresholdLevel: 0.25,\n      debugLogging: true,\n    },\n  };\n}\n\nexport default async function ({\n  renderer,\n  testRoot,\n  memMonitor,\n}: ExampleSettings) {\n  // Make the memory monitor update fast\n  if (memMonitor) {\n    memMonitor.interval = 10;\n  }\n  const screen = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    parent: testRoot,\n    color: 0xff00ffff,\n  });\n\n  renderer.createTextNode({\n    x: 0,\n    y: 0,\n    text: 'Critical Texture Memory Cleanup Test',\n    parent: screen,\n    fontFamily: 'Ubuntu',\n    fontSize: 60,\n  });\n\n  renderer.createTextNode({\n    x: 0,\n    y: 100,\n    width: renderer.settings.appWidth,\n    contain: 'width',\n    text: `This test will create and display a random NoiseTexture node every 10ms and never offer a moment for Idle Texture Cleanup. Only Critical Texture Cleanup will be triggered.\n\nSee docs/ManualRegressionTests.md for more information.\n    `,\n    parent: screen,\n    fontFamily: 'Ubuntu',\n    fontSize: 40,\n  });\n\n  // Create a new random texture every 10ms\n  setInterval(() => {\n    screen.texture = renderer.createTexture('NoiseTexture', {\n      width: 500,\n      height: 500,\n      cacheId: Math.floor(Math.random() * 100000),\n    });\n    screen.textureOptions.preload = true;\n  }, 10);\n}\n"],"names":[],"mappings":"AAqBO,SAAS,iBAAgD;AACvD,SAAA;AAAA,IACL,eAAe;AAAA,MACb,mBAAmB,MAAM,QAAQ;AAAA,MACjC,sBAAsB;AAAA,MACtB,cAAc;AAAA,IAChB;AAAA,EAAA;AAEJ;AAE+B,eAAA,uBAAA;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AACF,GAAoB;AAElB,MAAI,YAAY;AACd,eAAW,WAAW;AAAA,EACxB;AACM,QAAA,SAAS,SAAS,WAAW;AAAA,IACjC,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO,SAAS,SAAS;AAAA,IACzB,QAAQ,SAAS,SAAS;AAAA,IAC1B,QAAQ;AAAA,IACR,OAAO;AAAA,EAAA,CACR;AAED,WAAS,eAAe;AAAA,IACtB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,UAAU;AAAA,EAAA,CACX;AAED,WAAS,eAAe;AAAA,IACtB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO,SAAS,SAAS;AAAA,IACzB,SAAS;AAAA,IACT,MAAM;AAAA;AAAA;AAAA;AAAA,IAIN,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,UAAU;AAAA,EAAA,CACX;AAGD,cAAY,MAAM;AACT,WAAA,UAAU,SAAS,cAAc,gBAAgB;AAAA,MACtD,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,SAAS,KAAK,MAAM,KAAK,OAAA,IAAW,GAAM;AAAA,IAAA,CAC3C;AACD,WAAO,eAAe,UAAU;AAAA,KAC/B,EAAE;AACP;"}