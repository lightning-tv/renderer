{"version":3,"file":"constructTestRow-legacy-C8-7LPX4.js","sources":["../../common/constructTestRow.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { INode, RendererMain } from '@lightningjs/renderer';\nimport { waitForLoadedDimensions } from './utils.js';\n\nconst CONTAINER_SIZE = 200;\nconst PADDING = 20;\n\nexport interface TestRowOptions {\n  renderer: RendererMain;\n  rowNode: INode;\n  containerSize?: number;\n  padding?: number;\n}\n\nexport async function constructTestRow(\n  options: TestRowOptions,\n  testNodes: (INode | string)[],\n): Promise<number> {\n  const {\n    renderer,\n    rowNode,\n    containerSize = CONTAINER_SIZE,\n    padding = PADDING,\n  } = options;\n  let curX = 0;\n  const curY = 0;\n  for (const testNode of testNodes) {\n    if (typeof testNode === 'string') {\n      const dimensions = await waitForLoadedDimensions(\n        renderer.createTextNode({\n          mountY: 0.5,\n          x: curX,\n          y: containerSize / 2,\n          text: testNode,\n          parent: rowNode,\n        }),\n      );\n      curX += dimensions.width + padding;\n    } else {\n      const container = renderer.createNode({\n        parent: rowNode,\n        color: 0xffffffff,\n        width: containerSize,\n        height: containerSize,\n        clipping: true,\n        x: curX,\n        y: curY,\n      });\n      testNode.parent = container;\n      curX += containerSize + padding;\n    }\n  }\n  return curY + containerSize;\n}\n"],"names":["CONTAINER_SIZE","PADDING","constructTestRow","options","testNodes","__async","_regeneratorRuntime","mark","_callee","renderer","rowNode","_options$containerSiz","containerSize","_options$padding","padding","curX","curY","_iterator","_step","testNode","dimensions","container","wrap","_callee$","_context","prev","next","_createForOfIteratorHelper","s","n","done","waitForLoadedDimensions","createTextNode","mountY","x","y","text","parent","width","createNode","color","height","clipping","t0","e","f","finish","abrupt","stop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAsBA,IAAMA,cAAiB,GAAA,GAAA;QACvB,IAAMC,OAAU,GAAA,EAAA;QASM,SAAAC,gBAAAA,CACpBC,SACAC,SACiB,EAAA;UAAA,OAAAC,OAAA,CAAA,IAAA,EAAA,IAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAA,SAAAC,QAAA;YAAA,IAAAC,QAAA,EAAAC,OAAA,EAAAC,qBAAA,EAAAC,aAAA,EAAAC,gBAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,SAAA;YAAA,OAAAf,mBAAA,GAAAgB,IAAA,UAAAC,SAAAC,QAAA;cAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;gBAAA;kBAEfjB,QAAA,GAIEN,OAAA,CAJFM,QAAA,EACAC,OAAA,GAGEP,OAAA,CAHFO,OAAA,EAAAC,qBAAA,GAGER,OAAA,CAFFS,aAAgB,EAAhBA,aAAgB,GAAAD,qBAAA,cAAAX,cAAA,GAAAW,qBAAA,EAAAE,gBAAA,GAEdV,OAAA,CADFW,OAAU,EAAVA,OAAU,GAAAD,gBAAA,cAAAZ,OAAA,GAAAY,gBAAA;kBAERE,IAAO,GAAA,CAAA;kBACLC,IAAO,GAAA,CAAA;kBAAAC,SAAA,GAAAU,0BAAA,CACUvB,SAAW;kBAAAoB,QAAA,CAAAC,IAAA;kBAAAR,SAAA,CAAAW,CAAA;gBAAA;kBAAA,KAAAV,KAAA,GAAAD,SAAA,CAAAY,CAAA,IAAAC,IAAA;oBAAAN,QAAA,CAAAE,IAAA;oBAAA;kBAAA;kBAAvBP;wBACL,OAAOA,aAAa,QAAU;oBAAAK,QAAA,CAAAE,IAAA;oBAAA;kBAAA;kBAAAF,QAAA,CAAAE,IAAA;kBACb,OAAMK,uBAAA,CACvBtB,SAASuB,cAAe,CAAA;oBACtBC,MAAQ,EAAA,GAAA;oBACRC,CAAG,EAAAnB,IAAA;oBACHoB,GAAGvB,aAAgB,GAAA,CAAA;oBACnBwB,IAAM,EAAAjB,QAAA;oBACNkB,MAAQ,EAAA3B;kBAAA,CACT,CAAA,CACH;gBAAA;kBARMU;kBASNL,IAAA,IAAQK,WAAWkB,KAAQ,GAAAxB,OAAA;kBAAAU,QAAA,CAAAE,IAAA;kBAAA;gBAAA;kBAErBL,SAAA,GAAYZ,SAAS8B,UAAW,CAAA;oBACpCF,MAAQ,EAAA3B,OAAA;oBACR8B,KAAO,EAAA,UAAA;oBACPF,KAAO,EAAA1B,aAAA;oBACP6B,MAAQ,EAAA7B,aAAA;oBACR8B,QAAU,EAAA,IAAA;oBACVR,CAAG,EAAAnB,IAAA;oBACHoB,CAAG,EAAAnB;kBAAA,CACJ,CAAA;kBACDG,QAAA,CAASkB,MAAS,GAAAhB,SAAA;kBAClBN,IAAA,IAAQH,aAAgB,GAAAE,OAAA;gBAAA;kBAAAU,QAAA,CAAAE,IAAA;kBAAA;gBAAA;kBAAAF,QAAA,CAAAE,IAAA;kBAAA;gBAAA;kBAAAF,QAAA,CAAAC,IAAA;kBAAAD,QAAA,CAAAmB,EAAA,GAAAnB,QAAA;kBAAAP,SAAA,CAAA2B,CAAA,CAAApB,QAAA,CAAAmB,EAAA;gBAAA;kBAAAnB,QAAA,CAAAC,IAAA;kBAAAR,SAAA,CAAA4B,CAAA;kBAAA,OAAArB,QAAA,CAAAsB,MAAA;gBAAA;kBAAA,OAAAtB,QAAA,CAAAuB,MAAA,WAGrB/B,IAAO,GAAAJ,aAAA;gBAAA;gBAAA;kBAAA,OAAAY,QAAA,CAAAwB,IAAA;cAAA;YAAA,GAAAxC,OAAA;UAAA,CAChB,EAAA;QAAA;;;;"}