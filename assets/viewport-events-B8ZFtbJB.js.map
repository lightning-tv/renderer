{"version":3,"file":"viewport-events-B8ZFtbJB.js","sources":["../../tests/viewport-events.ts"],"sourcesContent":["import type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  const degToRad = (deg: number) => {\n    return (Math.PI / 180) * deg;\n  };\n\n  const instructionText = renderer.createTextNode({\n    text: 'Press space to start animation, arrow keys to move, enter to reset',\n    fontSize: 30,\n    x: 10,\n    y: 960,\n    parent: testRoot,\n  });\n\n  const redStatus = renderer.createTextNode({\n    text: 'Red Status: ',\n    fontSize: 30,\n    x: 10,\n    y: 50,\n    parent: testRoot,\n  });\n\n  const blueStatus = renderer.createTextNode({\n    text: 'Blue Status: ',\n    fontSize: 30,\n    x: 10,\n    y: 10,\n    parent: testRoot,\n  });\n\n  const yellowStatus = renderer.createTextNode({\n    text: 'Yellow Status: ',\n    fontSize: 30,\n    x: 800,\n    y: 10,\n    parent: testRoot,\n  });\n\n  const clippingStatus = renderer.createTextNode({\n    text: 'Clipping: ON',\n    fontSize: 30,\n    x: 800,\n    y: 50,\n    parent: testRoot,\n    color: 0x00ff00ff,\n  });\n\n  const boundaryRect = renderer.createNode({\n    x: 1920 / 2 - (1920 * 0.75) / 2,\n    y: 1080 / 2 - (1080 * 0.75) / 2,\n    width: 1440,\n    height: 810,\n    color: 0x000000ff,\n    clipping: true,\n    parent: testRoot,\n  });\n\n  const redRect = renderer.createNode({\n    // skipRender: true,\n    x: 520,\n    y: 305,\n    alpha: 1,\n    width: 200,\n    height: 200,\n    color: 0xff0000ff,\n    pivot: 0,\n    parent: boundaryRect,\n  });\n\n  const yellow1Rect = renderer.createNode({\n    x: 20,\n    y: 20,\n    alpha: 1,\n    width: 20,\n    height: 20,\n    color: 0xffff00ff,\n    pivot: 0,\n    parent: redRect,\n  });\n\n  const yellow2Rect = renderer.createNode({\n    x: 50,\n    y: 50,\n    alpha: 1,\n    width: 20,\n    height: 20,\n    color: 0xffff00ff,\n    pivot: 0,\n    parent: redRect,\n  });\n\n  const yellow3Rect = renderer.createNode({\n    x: 80,\n    y: 80,\n    alpha: 1,\n    width: 20,\n    height: 20,\n    color: 0xffff00ff,\n    pivot: 0,\n    parent: redRect,\n  });\n\n  const yellow4Rect = renderer.createNode({\n    x: 110,\n    y: 110,\n    alpha: 1,\n    width: 20,\n    height: 20,\n    color: 0xffff00ff,\n    pivot: 0,\n    parent: redRect,\n  });\n\n  redRect.on('outOfBounds', () => {\n    console.log('red rect out of bounds');\n    redStatus.text = 'Red Status: rect out of bounds';\n    redStatus.color = 0xff0000ff;\n  });\n\n  redRect.on('inViewport', () => {\n    console.log('red rect in view port');\n    redStatus.text = 'Red Status: rect in view port';\n    redStatus.color = 0x00ff00ff;\n  });\n\n  redRect.on('inBounds', () => {\n    console.log('red rect inside render bounds');\n    redStatus.text = 'Red Status: rect in bounds';\n    redStatus.color = 0xffff00ff;\n  });\n\n  // yellowstate\n  // 0 : out of bounds\n  // 1 : in bounds\n  // 2 : in viewport\n  const yellowRectState = [0, 0, 0, 0];\n  const updateYellowState = (state: number, yellowIdx: number) => {\n    let stateString = '';\n    yellowRectState[yellowIdx] = state;\n\n    Array(4)\n      .fill(0)\n      .forEach((_, i) => {\n        stateString += `${yellowRectState[i]} `;\n      });\n\n    yellowStatus.text = `Yellow Status: ${stateString}`;\n  };\n\n  yellow1Rect.on('inBounds', () => {\n    console.log('yellow 1 rect inside render bounds');\n    updateYellowState(1, 0);\n  });\n\n  yellow1Rect.on('inViewport', () => {\n    console.log('yellow 1 rect in view port');\n    updateYellowState(2, 0);\n  });\n\n  yellow1Rect.on('outOfBounds', () => {\n    console.log('yellow 1 rect out of bounds');\n    updateYellowState(0, 0);\n  });\n\n  yellow2Rect.on('inBounds', () => {\n    console.log('yellow 2 rect inside render bounds');\n    updateYellowState(1, 1);\n  });\n\n  yellow2Rect.on('inViewport', () => {\n    console.log('yellow 2 rect in view port');\n    updateYellowState(2, 1);\n  });\n\n  yellow2Rect.on('outOfBounds', () => {\n    console.log('yellow 2 rect out of bounds');\n    updateYellowState(0, 1);\n  });\n\n  yellow3Rect.on('inBounds', () => {\n    console.log('yellow 3 rect inside render bounds');\n    updateYellowState(1, 2);\n  });\n\n  yellow3Rect.on('inViewport', () => {\n    console.log('yellow 3 rect in view port');\n    updateYellowState(2, 2);\n  });\n\n  yellow3Rect.on('outOfBounds', () => {\n    console.log('yellow 3 rect out of bounds');\n    updateYellowState(0, 2);\n  });\n\n  yellow4Rect.on('inBounds', () => {\n    console.log('yellow 4 rect inside render bounds');\n    updateYellowState(1, 3);\n  });\n\n  yellow4Rect.on('inViewport', () => {\n    console.log('yellow 4 rect in view port');\n    updateYellowState(2, 3);\n  });\n\n  yellow4Rect.on('outOfBounds', () => {\n    console.log('yellow 4 rect out of bounds');\n    updateYellowState(0, 3);\n  });\n\n  const blueRect = renderer.createNode({\n    x: 1920 / 2 - 200,\n    y: 100,\n    alpha: 1,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    pivot: 0,\n    parent: testRoot,\n  });\n\n  blueRect.on('outOfBounds', () => {\n    console.log('blue rect ouf ot bounds');\n    blueStatus.text = 'Blue Status: blue rect out of bounds';\n    blueStatus.color = 0xff0000ff;\n  });\n\n  blueRect.on('inViewport', () => {\n    console.log('blue rect in view port');\n    blueStatus.text = 'Blue Status: blue rect in view port';\n    blueStatus.color = 0x00ff00ff;\n  });\n\n  blueRect.on('inBounds', () => {\n    console.log('blue rect inside render bounds');\n    blueStatus.text = 'Blue Status: blue rect in bounds';\n    blueStatus.color = 0xffff00ff;\n  });\n\n  let runAnimation = false;\n  const animate = async () => {\n    redRect\n      .animate(\n        {\n          x: -500,\n        },\n        {\n          duration: 4000,\n        },\n      )\n      .start();\n\n    await blueRect\n      .animate(\n        {\n          x: -1200,\n        },\n        {\n          duration: 4000,\n        },\n      )\n      .start()\n      .waitUntilStopped();\n\n    redRect.x = 1920 + 400;\n    blueRect.x = 1920 + 400;\n\n    redRect\n      .animate(\n        {\n          x: 520,\n        },\n        {\n          duration: 4000,\n        },\n      )\n      .start();\n\n    await blueRect\n      .animate(\n        {\n          x: 1920 / 2 - 200,\n        },\n        {\n          duration: 4000,\n        },\n      )\n      .start()\n      .waitUntilStopped();\n\n    if (runAnimation) {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      setTimeout(animate, 2000);\n    }\n  };\n\n  const moveModifier = 10;\n  window.onkeydown = (e) => {\n    if (e.key === ' ') {\n      runAnimation = !runAnimation;\n\n      if (runAnimation) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        animate();\n      }\n    }\n\n    if (e.key === 'ArrowRight') {\n      redRect.x += moveModifier;\n      blueRect.x += moveModifier;\n    }\n\n    if (e.key === 'ArrowLeft') {\n      redRect.x -= moveModifier;\n      blueRect.x -= moveModifier;\n    }\n\n    if (e.key === 'Enter') {\n      runAnimation = false;\n      redRect.x = 520;\n      blueRect.x = 1920 / 2 - 200;\n    }\n\n    if (e.key === 't') {\n      boundaryRect.clipping = !boundaryRect.clipping;\n\n      clippingStatus.text = boundaryRect.clipping\n        ? 'Clipping: ON'\n        : 'Clipping: OFF';\n      clippingStatus.color = boundaryRect.clipping ? 0x00ff00ff : 0xff0000ff;\n    }\n  };\n}\n"],"names":[],"mappings":"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"}