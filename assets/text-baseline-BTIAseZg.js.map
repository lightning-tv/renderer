{"version":3,"file":"text-baseline-BTIAseZg.js","sources":["../../tests/text-baseline.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ITextNodeProps, RendererMain } from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { paginateTestRows, type TestRow } from '../common/paginateTestRows.js';\nimport { PageContainer } from '../common/PageContainer.js';\nimport { waitForLoadedDimensions } from '../common/utils.js';\nimport { constructTestRow } from '../common/constructTestRow.js';\n\nexport async function automation(settings: ExampleSettings) {\n  // Snapshot all the pages\n  await (await test(settings)).snapshotPages();\n}\n\nexport default async function test(settings: ExampleSettings) {\n  const { renderer } = settings;\n  const pageContainer = new PageContainer(settings, {\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    title: 'Text Baseline',\n  });\n\n  await paginateTestRows(pageContainer, [\n    ...generateBaselineTest(renderer, 'sdf'),\n    ...generateBaselineTest(renderer, 'canvas'),\n  ]);\n\n  return pageContainer;\n}\n\nconst NODE_PROPS = {\n  x: 100,\n  y: 100,\n  color: 0x000000ff,\n  text: 'txyz',\n  fontFamily: 'Ubuntu',\n  textRendererOverride: 'sdf',\n  fontSize: 50,\n  lineHeight: 70,\n} satisfies Partial<ITextNodeProps>;\n\nfunction generateBaselineTest(\n  renderer: RendererMain,\n  textRenderer: 'canvas' | 'sdf',\n): TestRow[] {\n  return [\n    {\n      title: `Text Node ('textBaseline', ${textRenderer}, lineHeight = 70)${\n        textRenderer === 'sdf' ? ', \"BROKEN!\"' : ''\n      }`,\n      content: async (rowNode) => {\n        const nodeProps = {\n          ...NODE_PROPS,\n          textRendererOverride: textRenderer,\n        } satisfies Partial<ITextNodeProps>;\n\n        const baselineNode = renderer.createTextNode({\n          ...nodeProps,\n          parent: renderer.root,\n        });\n        const dimensions = await waitForLoadedDimensions(baselineNode);\n\n        // Get the position for the center of the container based on mount = 0\n        const position = {\n          x: 100 - dimensions.width / 2,\n          y: 100 - dimensions.height / 2,\n        };\n\n        baselineNode.x = position.x;\n        baselineNode.y = position.y;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          baselineNode,\n          'textBaseline (alphabetic) ->',\n          renderer.createTextNode({\n            ...nodeProps,\n            ...position,\n            textBaseline: 'alphabetic',\n          }),\n          'textBaseline: top ->',\n          renderer.createTextNode({\n            ...nodeProps,\n            ...position,\n            textBaseline: 'top',\n          }),\n          'textBaseline: middle ->',\n          renderer.createTextNode({\n            ...nodeProps,\n            ...position,\n            textBaseline: 'middle',\n          }),\n          'textBaseline: bottom ->',\n          renderer.createTextNode({\n            ...nodeProps,\n            ...position,\n            textBaseline: 'bottom',\n          }),\n        ]);\n      },\n    },\n  ] satisfies TestRow[];\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAsB,WAAW,UAA2B;AAAA,SAAA,QAAA,MAAA,MAAA,aAAA;AAE1D,WAAO,MAAM,KAAK,QAAQ,GAAG,cAAc;AAAA,EAAA,CAC7C;AAAA;AAEA,SAA8B,KAAK,UAA2B;AAAA,SAAA,QAAA,MAAA,MAAA,aAAA;AACtD,UAAA,EAAE,SAAa,IAAA;AACf,UAAA,gBAAgB,IAAI,cAAc,UAAU;AAAA,MAChD,OAAO,SAAS,SAAS;AAAA,MACzB,QAAQ,SAAS,SAAS;AAAA,MAC1B,OAAO;AAAA,IAAA,CACR;AAED,UAAM,iBAAiB,eAAe;AAAA,MACpC,GAAG,qBAAqB,UAAU,KAAK;AAAA,MACvC,GAAG,qBAAqB,UAAU,QAAQ;AAAA,IAAA,CAC3C;AAEM,WAAA;AAAA,EAAA,CACT;AAAA;AAEA,MAAM,aAAa;AAAA,EACjB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,OAAO;AAAA,EACP,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,sBAAsB;AAAA,EACtB,UAAU;AAAA,EACV,YAAY;AACd;AAEA,SAAS,qBACP,UACA,cACW;AACJ,SAAA;AAAA,IACL;AAAA,MACE,OAAO,8BAA8B,qBAAY,sBAC/C,wBAAiB,QAAQ,gBAAgB;AAAA,MAE3C,SAAS,CAAO,YAAY,QAAA,MAAA,MAAA,aAAA;AACpB,cAAA,YAAY,iCACb,UADa,GAAA;AAAA,UAEhB,sBAAsB;AAAA,QAAA,CACxB;AAEA,cAAM,eAAe,SAAS,eAAe,cAAA,eAAA,CAAA,GACxC,SADwC,GAAA;AAAA,UAE3C,QAAQ,SAAS;AAAA,QAClB,CAAA,CAAA;AACK,cAAA,aAAa,MAAM,wBAAwB,YAAY;AAG7D,cAAM,WAAW;AAAA,UACf,GAAG,MAAM,WAAW,QAAQ;AAAA,UAC5B,GAAG,MAAM,WAAW,SAAS;AAAA,QAAA;AAG/B,qBAAa,IAAI,SAAS;AAC1B,qBAAa,IAAI,SAAS;AAE1B,eAAO,MAAM,iBAAiB,EAAE,UAAU,WAAW;AAAA,UACnD;AAAA,UACA;AAAA,UACA,SAAS,eAAe,cACnB,eAAA,eAAA,IAAA,SAAA,GACA,QAFmB,GAAA;AAAA,YAGtB,cAAc;AAAA,UAAA,CACf,CAAA;AAAA,UACD;AAAA,UACA,SAAS,eAAe,cACnB,eAAA,eAAA,IAAA,SAAA,GACA,QAFmB,GAAA;AAAA,YAGtB,cAAc;AAAA,UAAA,CACf,CAAA;AAAA,UACD;AAAA,UACA,SAAS,eAAe,cACnB,eAAA,eAAA,IAAA,SAAA,GACA,QAFmB,GAAA;AAAA,YAGtB,cAAc;AAAA,UAAA,CACf,CAAA;AAAA,UACD;AAAA,UACA,SAAS,eAAe,cACnB,eAAA,eAAA,IAAA,SAAA,GACA,QAFmB,GAAA;AAAA,YAGtB,cAAc;AAAA,UAAA,CACf,CAAA;AAAA,QAAA,CACF;AAAA,MAAA,CACH;AAAA,IACF;AAAA,EAAA;AAEJ;"}