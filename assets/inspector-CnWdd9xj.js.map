{"version":3,"file":"inspector-CnWdd9xj.js","sources":["../../tests/inspector.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logo from '../assets/lightning.png';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  const bg = renderer.createNode({\n    width: 1920,\n    height: 1080,\n    color: 0x000000ff,\n    parent: testRoot,\n  });\n\n  const dataNodeCheckBox = renderer.createNode({\n    width: 100,\n    height: 100,\n    x: 80,\n    y: 200,\n    color: 0xff0000ff,\n    parent: bg,\n  });\n\n  const dataNode = renderer.createNode({\n    width: 505,\n    height: 101,\n    x: 200,\n    y: 200,\n    src: logo,\n    parent: bg,\n    data: {\n      id: 'dataNode',\n      number: 1,\n      boolean: true,\n    },\n  });\n\n  const tooLongStringCheckBox = renderer.createNode({\n    width: 100,\n    height: 100,\n    x: 80,\n    y: 400,\n    color: 0xff0000ff,\n    parent: bg,\n  });\n\n  const tooLongString = renderer.createNode({\n    width: 505,\n    height: 101,\n    x: 200,\n    y: 400,\n    src: logo,\n    parent: bg,\n    data: {\n      id: 'tooLongString',\n      b: 'a'.repeat(2049),\n    },\n  });\n\n  const textNodeCheckBox = renderer.createNode({\n    width: 100,\n    height: 100,\n    x: 80,\n    y: 600,\n    color: 0xff0000ff,\n    parent: bg,\n  });\n\n  const textNode = renderer.createTextNode({\n    x: 200,\n    y: 600,\n    height: 100,\n    text: 'Hello World',\n    fontFamily: 'Ubuntu',\n    fontSize: 100,\n    parent: bg,\n    data: {\n      id: 'textNode',\n    },\n  });\n\n  const testDetailsText = renderer.createTextNode({\n    x: 30,\n    y: 80,\n    height: 100,\n    text: 'Boxes should turn green if the inspector is enabled',\n    fontFamily: 'Ubuntu',\n    fontSize: 50,\n    parent: bg,\n  });\n\n  const testQparamDetailsText = renderer.createTextNode({\n    x: 30,\n    y: 800,\n    height: 100,\n    text: 'Please make sure to run this test with ?inspector=true',\n    fontFamily: 'Ubuntu',\n    fontSize: 50,\n    parent: bg,\n  });\n\n  setTimeout(() => {\n    // Select the first element with data-id=\"dataNode\"\n    const domDataNode = document.querySelector('[data-id=\"dataNode\"]');\n    if (domDataNode) {\n      dataNodeCheckBox.color = 0x00ff00ff;\n    }\n\n    const domTooLongString = document.querySelector(\n      '[data-id=\"tooLongString\"]',\n    );\n\n    if (domTooLongString) {\n      tooLongStringCheckBox.color = 0x00ff00ff;\n    }\n\n    const domTextNode = document.querySelector('[data-id=\"textNode\"]');\n\n    if (domTextNode) {\n      textNodeCheckBox.color = 0x00ff00ff;\n    }\n  }, 1000);\n}\n"],"names":["logo"],"mappings":";AAsB+B,eAAA,UAAA,EAAE,UAAU,YAA6B;AAChE,QAAA,KAAK,SAAS,WAAW;AAAA,IAC7B,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,EAAA,CACT;AAEK,QAAA,mBAAmB,SAAS,WAAW;AAAA,IAC3C,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO;AAAA,IACP,QAAQ;AAAA,EAAA,CACT;AAEgB,WAAS,WAAW;AAAA,IACnC,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,GAAG;AAAA,IACH,KAAKA;AAAAA,IACL,QAAQ;AAAA,IACR,MAAM;AAAA,MACJ,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,SAAS;AAAA,IACX;AAAA,EAAA,CACD;AAEK,QAAA,wBAAwB,SAAS,WAAW;AAAA,IAChD,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO;AAAA,IACP,QAAQ;AAAA,EAAA,CACT;AAEqB,WAAS,WAAW;AAAA,IACxC,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,GAAG;AAAA,IACH,KAAKA;AAAAA,IACL,QAAQ;AAAA,IACR,MAAM;AAAA,MACJ,IAAI;AAAA,MACJ,GAAG,IAAI,OAAO,IAAI;AAAA,IACpB;AAAA,EAAA,CACD;AAEK,QAAA,mBAAmB,SAAS,WAAW;AAAA,IAC3C,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO;AAAA,IACP,QAAQ;AAAA,EAAA,CACT;AAEgB,WAAS,eAAe;AAAA,IACvC,GAAG;AAAA,IACH,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,MAAM;AAAA,MACJ,IAAI;AAAA,IACN;AAAA,EAAA,CACD;AAEuB,WAAS,eAAe;AAAA,IAC9C,GAAG;AAAA,IACH,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,QAAQ;AAAA,EAAA,CACT;AAE6B,WAAS,eAAe;AAAA,IACpD,GAAG;AAAA,IACH,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,QAAQ;AAAA,EAAA,CACT;AAED,aAAW,MAAM;AAET,UAAA,cAAc,SAAS,cAAc,sBAAsB;AACjE,QAAI,aAAa;AACf,uBAAiB,QAAQ;AAAA,IAC3B;AAEA,UAAM,mBAAmB,SAAS;AAAA,MAChC;AAAA,IAAA;AAGF,QAAI,kBAAkB;AACpB,4BAAsB,QAAQ;AAAA,IAChC;AAEM,UAAA,cAAc,SAAS,cAAc,sBAAsB;AAEjE,QAAI,aAAa;AACf,uBAAiB,QAAQ;AAAA,IAC3B;AAAA,KACC,GAAI;AACT;"}