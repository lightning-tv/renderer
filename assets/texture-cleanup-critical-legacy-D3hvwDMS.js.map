{"version":3,"file":"texture-cleanup-critical-legacy-D3hvwDMS.js","sources":["../../tests/texture-cleanup-critical.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { RendererMainSettings } from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport function customSettings(): Partial<RendererMainSettings> {\n  return {\n    textureMemory: {\n      criticalThreshold: 100 * 1024 ** 2,\n      targetThresholdLevel: 0.25,\n      debugLogging: true,\n    },\n  };\n}\n\nexport default async function ({\n  renderer,\n  testRoot,\n  memMonitor,\n}: ExampleSettings) {\n  // Make the memory monitor update fast\n  if (memMonitor) {\n    memMonitor.interval = 10;\n  }\n  const screen = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    parent: testRoot,\n    color: 0xff00ffff,\n  });\n\n  renderer.createTextNode({\n    x: 0,\n    y: 0,\n    text: 'Critical Texture Memory Cleanup Test',\n    parent: screen,\n    fontFamily: 'Ubuntu',\n    fontSize: 60,\n  });\n\n  renderer.createTextNode({\n    x: 0,\n    y: 100,\n    width: renderer.settings.appWidth,\n    contain: 'width',\n    text: `This test will create and display a random NoiseTexture node every 10ms and never offer a moment for Idle Texture Cleanup. Only Critical Texture Cleanup will be triggered.\n\nSee docs/ManualRegressionTests.md for more information.\n    `,\n    parent: screen,\n    fontFamily: 'Ubuntu',\n    fontSize: 40,\n  });\n\n  // Create a new random texture every 10ms\n  setInterval(() => {\n    screen.texture = renderer.createTexture('NoiseTexture', {\n      width: 500,\n      height: 500,\n      cacheId: Math.floor(Math.random() * 100000),\n    });\n    screen.textureOptions.preload = true;\n  }, 10);\n}\n"],"names":["customSettings","textureMemory","criticalThreshold","__pow","targetThresholdLevel","debugLogging","textureCleanupCritical","_0","__async","arguments","_ref","renderer","testRoot","memMonitor","_regeneratorRuntime","mark","_callee","screen","wrap","_callee$","_context","prev","next","interval","createNode","x","y","width","settings","appWidth","height","appHeight","parent","color","createTextNode","text","fontFamily","fontSize","contain","setInterval","texture","createTexture","cacheId","Math","floor","random","textureOptions","preload","stop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAqBO,SAASA,cAAgDA,CAAA,EAAA;UACvD,OAAA;YACLC,aAAe,EAAA;cACbC,iBAAA,EAAmB,MAAMC,KAAQ,CAAA,IAAA,EAAA,CAAA,CAAA;cACjCC,oBAAsB,EAAA,IAAA;cACtBC,YAAc,EAAA;YAChB;UAAA,CACF;QACF;QAEA,SAAAC,sBAAAA,CAA+BC,EAIX,EAAA;UAJW,OAAAC,OAAA,CAAA,IAAA,EAAAC,SAAA,EAAA,UAAAC,IAAA;YAAA,IAC7BC,QAAA,GAAAD,IAAA,CAAAC,QAAA;cACAC,QAAA,GAAAF,IAAA,CAAAE,QAAA;cACAC,UAAA,GAAAH,IAAA,CAAAG,UAAA;YAAA,oBAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;cAAA,IAAAC,MAAA;cAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;gBAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;kBAAA;oBAGA,IAAIT,UAAY,EAAA;sBACdA,UAAA,CAAWU,QAAW,GAAA,EAAA;oBACxB;oBACMN,MAAA,GAASN,SAASa,UAAW,CAAA;sBACjCC,CAAG,EAAA,CAAA;sBACHC,CAAG,EAAA,CAAA;sBACHC,KAAA,EAAOhB,SAASiB,QAAS,CAAAC,QAAA;sBACzBC,MAAA,EAAQnB,SAASiB,QAAS,CAAAG,SAAA;sBAC1BC,MAAQ,EAAApB,QAAA;sBACRqB,KAAO,EAAA;oBAAA,CACR,CAAA;oBAEDtB,QAAA,CAASuB,cAAe,CAAA;sBACtBT,CAAG,EAAA,CAAA;sBACHC,CAAG,EAAA,CAAA;sBACHS,IAAM,EAAA,sCAAA;sBACNH,MAAQ,EAAAf,MAAA;sBACRmB,UAAY,EAAA,QAAA;sBACZC,QAAU,EAAA;oBAAA,CACX,CAAA;oBAED1B,QAAA,CAASuB,cAAe,CAAA;sBACtBT,CAAG,EAAA,CAAA;sBACHC,CAAG,EAAA,GAAA;sBACHC,KAAA,EAAOhB,SAASiB,QAAS,CAAAC,QAAA;sBACzBS,OAAS,EAAA,OAAA;sBACTH,IAAM,gPAAA;sBAINH,MAAQ,EAAAf,MAAA;sBACRmB,UAAY,EAAA,QAAA;sBACZC,QAAU,EAAA;oBAAA,CACX,CAAA;oBAGDE,WAAA,CAAY,YAAM;sBACTtB,MAAA,CAAAuB,OAAA,GAAU7B,QAAS,CAAA8B,aAAA,CAAc,cAAgB,EAAA;wBACtDd,KAAO,EAAA,GAAA;wBACPG,MAAQ,EAAA,GAAA;wBACRY,SAASC,IAAK,CAAAC,KAAA,CAAMD,IAAK,CAAAE,MAAA,CAAA,IAAW,GAAM;sBAAA,CAC3C,CAAA;sBACD5B,MAAA,CAAO6B,eAAeC,OAAU,GAAA,IAAA;uBAC/B,EAAE,CAAA;kBAAA;kBAAA;oBAAA,OAAA3B,QAAA,CAAA4B,IAAA;gBAAA;cAAA,GAAAhC,OAAA;YAAA;UAAA,CACP,CAAA;QAAA;;;;"}