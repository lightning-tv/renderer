{"version":3,"file":"text-offscreen-move-BifZhSmC.js","sources":["../../tests/text-offscreen-move.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  INode,\n  ITextNodeProps,\n  RendererMain,\n} from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { PageContainer } from '../common/PageContainer.js';\n\nexport async function automation(settings: ExampleSettings) {\n  // Snapshot all the pages\n  await (await test(settings)).snapshotPages();\n}\n\n/**\n * This test is to ensure that text that starts offscreen and moves onscreen\n * is rendered correctly.\n *\n * This test was designed around the following bug report:\n * https://github.com/lightning-js/renderer/issues/50\n *\n * @param param0\n */\nexport default async function test(settings: ExampleSettings) {\n  const { renderer } = settings;\n  const pageContainer = new PageContainer(settings, {\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    title: 'Text Offscreen Move Tests',\n  });\n\n  pageContainer.pushPage(createTestCase(renderer, 'sdf', 'none'));\n  pageContainer.pushPage(createTestCase(renderer, 'sdf', 'width'));\n  pageContainer.pushPage(createTestCase(renderer, 'sdf', 'both'));\n  pageContainer.pushPage(createTestCase(renderer, 'canvas', 'none'));\n  pageContainer.pushPage(createTestCase(renderer, 'canvas', 'width'));\n  pageContainer.pushPage(createTestCase(renderer, 'canvas', 'both'));\n\n  await delay(200);\n  pageContainer.finalizePages();\n  return pageContainer;\n}\n\nconst commonTextProps = {\n  mount: 0.5,\n  width: 400,\n  height: 400,\n  contain: 'none',\n  text: 'Test passes if this text appears only as green',\n  fontFamily: 'Ubuntu',\n  textRendererOverride: 'canvas',\n  fontSize: 50,\n} satisfies Partial<ITextNodeProps>;\n\nfunction createTestCase(\n  renderer: RendererMain,\n  textRenderer: 'canvas' | 'sdf',\n  contain: ITextNodeProps['contain'],\n) {\n  return async function (page: INode) {\n    const subheader = renderer.createTextNode({\n      x: 0,\n      y: 10,\n      text: '',\n      fontFamily: 'Ubuntu',\n      textRendererOverride: 'sdf',\n      fontSize: 30,\n      parent: page,\n    });\n\n    subheader.text = `textRenderer = ${textRenderer}\\ncontain = ${contain}`;\n    renderer.createTextNode({\n      ...commonTextProps,\n      color: 0xff0000ff,\n      x: renderer.settings.appWidth / 2,\n      y: renderer.settings.appHeight / 2,\n      textRendererOverride: textRenderer,\n      contain,\n      parent: page,\n    });\n\n    const offscreenStartText = renderer.createTextNode({\n      ...commonTextProps,\n      color: 0x00ff00ff,\n      x: -1000,\n      y: -1000,\n      textRendererOverride: textRenderer,\n      contain,\n      parent: page,\n    });\n\n    // Move Offscreen Text on screen\n    offscreenStartText.x = renderer.settings.appWidth / 2;\n    offscreenStartText.y = renderer.settings.appHeight / 2;\n  };\n}\n\nfunction delay(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAsB,WAAW,UAA2B;AAAA,SAAA,QAAA,MAAA,MAAA,aAAA;AAE1D,WAAO,MAAM,KAAK,QAAQ,GAAG,cAAc;AAAA,EAAA,CAC7C;AAAA;AAWA,SAA8B,KAAK,UAA2B;AAAA,SAAA,QAAA,MAAA,MAAA,aAAA;AACtD,UAAA,EAAE,SAAa,IAAA;AACf,UAAA,gBAAgB,IAAI,cAAc,UAAU;AAAA,MAChD,OAAO,SAAS,SAAS;AAAA,MACzB,QAAQ,SAAS,SAAS;AAAA,MAC1B,OAAO;AAAA,IAAA,CACR;AAED,kBAAc,SAAS,eAAe,UAAU,OAAO,MAAM,CAAC;AAC9D,kBAAc,SAAS,eAAe,UAAU,OAAO,OAAO,CAAC;AAC/D,kBAAc,SAAS,eAAe,UAAU,OAAO,MAAM,CAAC;AAC9D,kBAAc,SAAS,eAAe,UAAU,UAAU,MAAM,CAAC;AACjE,kBAAc,SAAS,eAAe,UAAU,UAAU,OAAO,CAAC;AAClE,kBAAc,SAAS,eAAe,UAAU,UAAU,MAAM,CAAC;AAEjE,UAAM,MAAM,GAAG;AACf,kBAAc,cAAc;AACrB,WAAA;AAAA,EAAA,CACT;AAAA;AAEA,MAAM,kBAAkB;AAAA,EACtB,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,sBAAsB;AAAA,EACtB,UAAU;AACZ;AAEA,SAAS,eACP,UACA,cACA,SACA;AACA,SAAO,SAAgB,MAAa;AAAA,WAAA,QAAA,MAAA,MAAA,aAAA;AAC5B,YAAA,YAAY,SAAS,eAAe;AAAA,QACxC,GAAG;AAAA,QACH,GAAG;AAAA,QACH,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,sBAAsB;AAAA,QACtB,UAAU;AAAA,QACV,QAAQ;AAAA,MAAA,CACT;AAES,gBAAA,OAAO,kBAAkB,qBAAY,gBAAe;AACrD,eAAA,eAAe,iCACnB,eADmB,GAAA;AAAA,QAEtB,OAAO;AAAA,QACP,GAAG,SAAS,SAAS,WAAW;AAAA,QAChC,GAAG,SAAS,SAAS,YAAY;AAAA,QACjC,sBAAsB;AAAA,QACtB;AAAA,QACA,QAAQ;AAAA,MACT,CAAA,CAAA;AAED,YAAM,qBAAqB,SAAS,eAAe,cAAA,eAAA,CAAA,GAC9C,eAD8C,GAAA;AAAA,QAEjD,OAAO;AAAA,QACP,GAAG;AAAA,QACH,GAAG;AAAA,QACH,sBAAsB;AAAA,QACtB;AAAA,QACA,QAAQ;AAAA,MACT,CAAA,CAAA;AAGkB,yBAAA,IAAI,SAAS,SAAS,WAAW;AACjC,yBAAA,IAAI,SAAS,SAAS,YAAY;AAAA,IAAA,CACvD;AAAA,EAAA;AACF;AAEA,SAAS,MAAM,IAAY;AACzB,SAAO,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,EAAE,CAAC;AACzD;"}