{"version":3,"file":"absolute-position-BblyzWic.js","sources":["../../tests/absolute-position.ts"],"sourcesContent":["import type { INode } from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  function createTextNode(container: INode, label?: string | undefined) {\n    const textNode = renderer.createTextNode({\n      x: 10,\n      y: 10,\n      text: `${label ? label + '\\n' : ''}X: ${container.x} => absX: ${\n        container.absX\n      }\\nY: ${container.y} => absY: ${container.absY}\\nMountX: ${\n        container.mountX\n      } | MountY: ${container.mountY}`,\n      parent: container,\n    });\n    return textNode;\n  }\n\n  /* Create a grid to show the values */\n  for (let index = 1; index <= Math.ceil(testRoot.width / 100); index++) {\n    renderer.createNode({\n      x: index * 100,\n      y: 0,\n      width: 2,\n      height: testRoot.height,\n      color: index % 5 ? 0xffffff40 : 0xffffffa0,\n      parent: testRoot,\n    });\n  }\n  for (let index = 1; index <= Math.ceil(testRoot.height / 100); index++) {\n    renderer.createNode({\n      x: 0,\n      y: index * 100,\n      width: testRoot.width,\n      height: 2,\n      color: index % 5 ? 0xffffff40 : 0xffffffa0,\n      parent: testRoot,\n    });\n  }\n\n  const defaultRect = renderer.createNode({\n    x: 100,\n    y: 100,\n    width: 200,\n    height: 200,\n    mountX: 0,\n    color: 0x00ff00ff,\n    parent: testRoot,\n  });\n  createTextNode(defaultRect, 'Default');\n\n  const mount1Rect = renderer.createNode({\n    x: 600,\n    y: 200,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    mount: 1,\n    parent: testRoot,\n  });\n  createTextNode(mount1Rect, 'Mount 1');\n\n  const scaleRect = renderer.createNode({\n    x: 700,\n    y: 100,\n    width: 200,\n    height: 200,\n    scale: 1.2,\n    color: 0xff0000ff,\n    parent: testRoot,\n  });\n  createTextNode(scaleRect, 'Scale 1.2');\n\n  const rotationPivot0Rect = renderer.createNode({\n    x: 1100,\n    y: 100,\n    width: 200,\n    height: 200,\n    rotation: Math.PI / 6,\n    pivot: 0,\n    color: 0xff0000ff,\n    parent: testRoot,\n  });\n  createTextNode(rotationPivot0Rect, 'Rotation Pivot 0');\n\n  const rotationPivot1Rect = renderer.createNode({\n    x: 1300,\n    y: 100,\n    width: 200,\n    height: 200,\n    rotation: Math.PI / 6,\n    pivot: 1,\n    color: 0xff0000ff,\n    parent: testRoot,\n  });\n  createTextNode(rotationPivot1Rect, 'Rotation Pivot 1');\n\n  const mountX1Rect = renderer.createNode({\n    x: 300,\n    y: 500,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    mountX: 1,\n    mountY: 0,\n    parent: testRoot,\n  });\n  createTextNode(mountX1Rect, 'MountX 1');\n\n  const mountY1Rect = renderer.createNode({\n    x: 400,\n    y: 600,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    mountX: 0,\n    mountY: 1,\n    parent: testRoot,\n  });\n  createTextNode(mountY1Rect, 'MountY 1');\n\n  const mountThirdRect = renderer.createNode({\n    x: 700,\n    y: 600,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    mountX: 0.33,\n    mountY: 0.66,\n    parent: testRoot,\n  });\n  createTextNode(mountThirdRect, 'MountX 0.33 MountY 0.66');\n\n  const mountScaleRect = renderer.createNode({\n    x: 1200,\n    y: 600,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    mountX: 1,\n    mountY: 0.5,\n    scale: 1.5,\n    parent: testRoot,\n  });\n  createTextNode(mountScaleRect, 'Mount and Scale 1.5');\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA,SAAA,iBAA+B,IAAyC;AAAzC,SAAA,QAAA,MAAA,WAAA,WAAA,EAAE,UAAU,YAA6B;AAC7D,aAAA,eAAe,WAAkB,OAA4B;AAC9D,YAAA,WAAW,SAAS,eAAe;AAAA,QACvC,GAAG;AAAA,QACH,GAAG;AAAA,QACH,MAAM,GAAG,eAAQ,QAAQ,OAAO,IAAE,OAAM,iBAAU,GAAC,cACjD,iBAAU,MACZ,SAAQ,iBAAU,GAAC,cAAa,iBAAU,MAAI,cAC5C,iBAAU,QACZ,eAAc,iBAAU;AAAA,QACxB,QAAQ;AAAA,MAAA,CACT;AACM,aAAA;AAAA,IACT;AAGS,aAAA,QAAQ,GAAG,SAAS,KAAK,KAAK,SAAS,QAAQ,GAAG,GAAG,SAAS;AACrE,eAAS,WAAW;AAAA,QAClB,GAAG,QAAQ;AAAA,QACX,GAAG;AAAA,QACH,OAAO;AAAA,QACP,QAAQ,SAAS;AAAA,QACjB,OAAO,QAAQ,IAAI,aAAa;AAAA,QAChC,QAAQ;AAAA,MAAA,CACT;AAAA,IACH;AACS,aAAA,QAAQ,GAAG,SAAS,KAAK,KAAK,SAAS,SAAS,GAAG,GAAG,SAAS;AACtE,eAAS,WAAW;AAAA,QAClB,GAAG;AAAA,QACH,GAAG,QAAQ;AAAA,QACX,OAAO,SAAS;AAAA,QAChB,QAAQ;AAAA,QACR,OAAO,QAAQ,IAAI,aAAa;AAAA,QAChC,QAAQ;AAAA,MAAA,CACT;AAAA,IACH;AAEM,UAAA,cAAc,SAAS,WAAW;AAAA,MACtC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACD,mBAAe,aAAa,SAAS;AAE/B,UAAA,aAAa,SAAS,WAAW;AAAA,MACrC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACD,mBAAe,YAAY,SAAS;AAE9B,UAAA,YAAY,SAAS,WAAW;AAAA,MACpC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACD,mBAAe,WAAW,WAAW;AAE/B,UAAA,qBAAqB,SAAS,WAAW;AAAA,MAC7C,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,UAAU,KAAK,KAAK;AAAA,MACpB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACD,mBAAe,oBAAoB,kBAAkB;AAE/C,UAAA,qBAAqB,SAAS,WAAW;AAAA,MAC7C,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,UAAU,KAAK,KAAK;AAAA,MACpB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACD,mBAAe,oBAAoB,kBAAkB;AAE/C,UAAA,cAAc,SAAS,WAAW;AAAA,MACtC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,IAAA,CACT;AACD,mBAAe,aAAa,UAAU;AAEhC,UAAA,cAAc,SAAS,WAAW;AAAA,MACtC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,IAAA,CACT;AACD,mBAAe,aAAa,UAAU;AAEhC,UAAA,iBAAiB,SAAS,WAAW;AAAA,MACzC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,IAAA,CACT;AACD,mBAAe,gBAAgB,yBAAyB;AAElD,UAAA,iBAAiB,SAAS,WAAW;AAAA,MACzC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACD,mBAAe,gBAAgB,qBAAqB;AAAA,EAAA,CACtD;AAAA;"}