{"version":3,"file":"scaling-animations-legacy-B5tzDGTL.js","sources":["../../tests/scaling-animations.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  const randomColor = () => {\n    const randomInt = Math.floor(Math.random() * Math.pow(2, 32));\n    const hexString = randomInt.toString(16).padStart(8, '0');\n\n    return parseInt(hexString, 16);\n  };\n\n  const rnd = (min: number, max: number) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  new Array(15).fill(0).forEach((el, idx) => {\n    const pivot = Math.random();\n\n    const node = renderer.createNode({\n      x: Math.floor(idx % 5) * 360 + 100,\n      y: Math.floor(idx / 5) * 360 + 100,\n      width: rnd(200, 300),\n      height: rnd(200, 300),\n      colorBottom: randomColor(),\n      colorTop: randomColor(),\n      parent: testRoot,\n      shader: renderer.createShader('RoundedRectangle', {\n        radius: rnd(10, 50),\n      }),\n      scale: 1,\n      pivot, // x: 0.5 / y:0.5\n    });\n\n    const pivotPoint = renderer.createNode({\n      x: pivot * 140 - 5,\n      y: pivot * 140 - 5,\n      width: 20,\n      height: 20,\n      color: 0xffffff55,\n      parent: node,\n      // shader: renderer.createShader('RoundedRectangle', {\n      //   radius: 5,\n      // }),\n      scale: 1,\n    });\n\n    const pointInner = renderer.createNode({\n      x: 2,\n      y: 2,\n      width: 16,\n      height: 16,\n      color: 0x000000ff,\n      parent: pivotPoint,\n      // shader: renderer.createShader('RoundedRectangle', {\n      //   radius: 3,\n      // }),\n    });\n\n    setTimeout(() => {\n      node\n        .animate(\n          {\n            scale: rnd(2, 4),\n            rotation: Math.random() * Math.PI,\n            y: 460,\n            x: 820,\n            width: 3,\n            height: 180,\n          },\n          {\n            duration: rnd(1500, 1700),\n            loop: false,\n            stopMethod: 'reverse',\n            easing: 'cubic-bezier(0,1.35,.99,-0.07)',\n          },\n        )\n        .start();\n    }, 1500);\n  });\n\n  console.log('ready!');\n}\n"],"names":["scalingAnimations","_0","__async","arguments","_ref","renderer","testRoot","_regeneratorRuntime","mark","_callee","randomColor","rnd","wrap","_callee$","_context","prev","next","randomInt","Math","floor","random","pow","hexString","toString","padStart","parseInt","min","max","Array","fill","forEach","el","idx","pivot","node","createNode","x","y","width","height","colorBottom","colorTop","parent","shader","createShader","radius","scale","pivotPoint","color","setTimeout","animate","rotation","PI","duration","loop","stopMethod","easing","start","console","log","stop"],"mappings":"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"}