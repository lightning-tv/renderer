{"version":3,"file":"mount-pivot-legacy-Bps1bkng.js","sources":["../../tests/mount-pivot.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  const randomColor = () => {\n    const randomInt = Math.floor(Math.random() * Math.pow(2, 32));\n    const hexString = randomInt.toString(16).padStart(8, '0');\n\n    return parseInt(hexString, 16);\n  };\n\n  const rnd = (min: number, max: number) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const bg = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 1920,\n    height: 1080,\n    color: 0x000000ff,\n    parent: testRoot,\n  });\n\n  const x = renderer.createNode({\n    x: 0,\n    y: 1080 / 2,\n    width: 1920,\n    height: 4,\n    color: 0xffffffff,\n    parent: testRoot,\n    mountY: 0.5,\n  });\n\n  const y = renderer.createNode({\n    x: 1920 / 2,\n    y: 0,\n    width: 4,\n    height: 1080,\n    color: 0xffffffff,\n    parent: testRoot,\n    mountX: 0.5,\n  });\n\n  const pivotX = 0.5;\n  const pivotY = 0.5;\n\n  const mountX = 0.5;\n  const mountY = 0.5;\n\n  const node = renderer.createNode({\n    x: 1920 / 2,\n    y: 1080 / 2,\n    width: 500,\n    height: 500,\n    colorBottom: randomColor() * 0xffffffaa,\n    colorTop: randomColor() * 0xffffffaa,\n    parent: testRoot,\n    shader: renderer.createShader('RoundedRectangle', {\n      radius: rnd(10, 50),\n    }),\n    mountX,\n    mountY,\n    pivotX,\n    pivotY,\n  });\n\n  const pivotPoint = renderer.createNode({\n    x: pivotX * 500,\n    y: pivotY * 500,\n    width: 20,\n    height: 20,\n    color: 0xffffffff,\n    parent: node,\n    shader: renderer.createShader('RoundedRectangle', {\n      radius: 10,\n    }),\n    scale: 1,\n    mount: 0.5,\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  setTimeout(async () => {\n    const dimension = node\n      .animate(\n        {\n          width: 1920,\n        },\n        {\n          duration: 450,\n          loop: false,\n          stopMethod: 'reverse',\n          easing: 'ease-in-out',\n        },\n      )\n      .start();\n\n    await dimension.waitUntilStopped();\n\n    const rotate = node\n      .animate(\n        {\n          rotation: Math.PI,\n        },\n        {\n          duration: rnd(1500, 1700),\n          loop: false,\n          stopMethod: 'reverse',\n          easing: 'ease-in-out',\n        },\n      )\n      .start();\n    await rotate.waitUntilStopped();\n  }, 2300);\n}\n"],"names":["mountPivot","_0","__async","arguments","_ref","_this","renderer","testRoot","_regeneratorRuntime","mark","_callee2","randomColor","rnd","pivotX","pivotY","mountX","mountY","node","wrap","_callee2$","_context2","prev","next","randomInt","Math","floor","random","pow","hexString","toString","padStart","parseInt","min","max","createNode","x","y","width","height","color","parent","colorBottom","colorTop","shader","createShader","radius","scale","mount","setTimeout","_callee","dimension","rotate","_callee$","_context","animate","duration","loop","stopMethod","easing","start","waitUntilStopped","rotation","PI","stop"],"mappings":"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"}