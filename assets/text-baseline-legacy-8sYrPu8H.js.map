{"version":3,"file":"text-baseline-legacy-8sYrPu8H.js","sources":["../../tests/text-baseline.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ITextNodeProps, RendererMain } from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { paginateTestRows, type TestRow } from '../common/paginateTestRows.js';\nimport { PageContainer } from '../common/PageContainer.js';\nimport { waitForLoadedDimensions } from '../common/utils.js';\nimport { constructTestRow } from '../common/constructTestRow.js';\n\nexport async function automation(settings: ExampleSettings) {\n  // Snapshot all the pages\n  await (await test(settings)).snapshotPages();\n}\n\nexport default async function test(settings: ExampleSettings) {\n  const { renderer } = settings;\n  const pageContainer = new PageContainer(settings, {\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    title: 'Text Baseline',\n  });\n\n  await paginateTestRows(pageContainer, [\n    ...generateBaselineTest(renderer, 'sdf'),\n    ...generateBaselineTest(renderer, 'canvas'),\n  ]);\n\n  return pageContainer;\n}\n\nconst NODE_PROPS = {\n  x: 100,\n  y: 100,\n  color: 0x000000ff,\n  text: 'txyz',\n  fontFamily: 'Ubuntu',\n  textRendererOverride: 'sdf',\n  fontSize: 50,\n  lineHeight: 70,\n} satisfies Partial<ITextNodeProps>;\n\nfunction generateBaselineTest(\n  renderer: RendererMain,\n  textRenderer: 'canvas' | 'sdf',\n): TestRow[] {\n  return [\n    {\n      title: `Text Node ('textBaseline', ${textRenderer}, lineHeight = 70)${\n        textRenderer === 'sdf' ? ', \"BROKEN!\"' : ''\n      }`,\n      content: async (rowNode) => {\n        const nodeProps = {\n          ...NODE_PROPS,\n          textRendererOverride: textRenderer,\n        } satisfies Partial<ITextNodeProps>;\n\n        const baselineNode = renderer.createTextNode({\n          ...nodeProps,\n          parent: renderer.root,\n        });\n        const dimensions = await waitForLoadedDimensions(baselineNode);\n\n        // Get the position for the center of the container based on mount = 0\n        const position = {\n          x: 100 - dimensions.width / 2,\n          y: 100 - dimensions.height / 2,\n        };\n\n        baselineNode.x = position.x;\n        baselineNode.y = position.y;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          baselineNode,\n          'textBaseline (alphabetic) ->',\n          renderer.createTextNode({\n            ...nodeProps,\n            ...position,\n            textBaseline: 'alphabetic',\n          }),\n          'textBaseline: top ->',\n          renderer.createTextNode({\n            ...nodeProps,\n            ...position,\n            textBaseline: 'top',\n          }),\n          'textBaseline: middle ->',\n          renderer.createTextNode({\n            ...nodeProps,\n            ...position,\n            textBaseline: 'middle',\n          }),\n          'textBaseline: bottom ->',\n          renderer.createTextNode({\n            ...nodeProps,\n            ...position,\n            textBaseline: 'bottom',\n          }),\n        ]);\n      },\n    },\n  ] satisfies TestRow[];\n}\n"],"names":["automation","settings","__async","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","test","sent","snapshotPages","stop","_callee2","renderer","pageContainer","_callee2$","_context2","PageContainer","width","appWidth","height","appHeight","title","paginateTestRows","concat","_toConsumableArray","generateBaselineTest","abrupt","NODE_PROPS","x","y","color","text","fontFamily","textRendererOverride","fontSize","lineHeight","textRenderer","_this","content","rowNode","_callee3","nodeProps","baselineNode","dimensions","position","_callee3$","_context3","__spreadProps","createTextNode","__spreadValues","parent","root","waitForLoadedDimensions","constructTestRow","textBaseline"],"mappings":"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"}