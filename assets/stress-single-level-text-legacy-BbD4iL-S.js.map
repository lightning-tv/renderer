{"version":3,"file":"stress-single-level-text-legacy-BbD4iL-S.js","sources":["../../tests/stress-single-level-text.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { type INode } from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nconst randomIntBetween = (from: number, to: number) =>\n  Math.floor(Math.random() * (to - from + 1) + from);\n\nexport default async function ({\n  renderer,\n  testRoot,\n  perfMultiplier,\n}: ExampleSettings) {\n  // create 100 nodes\n  const numOuterNodes = 100 * perfMultiplier;\n  const nodes: INode[] = [];\n\n  const startMin = -1000;\n  const startMax = 3000;\n  const endMin = -1000;\n  const endMax = 3000;\n\n  const bg = renderer.createNode({\n    width: 1920,\n    height: 1080,\n    color: 0xff1e293b,\n    parent: testRoot,\n  });\n\n  for (let i = 0; i < numOuterNodes; i++) {\n    const node = renderer.createTextNode({\n      x: randomIntBetween(startMin, startMax),\n      y: randomIntBetween(startMin, startMax),\n      fontFamily: 'Ubuntu',\n      textRendererOverride: 'sdf',\n      text: 'Lightning 3.0',\n      // contain: 'both',\n      // width: 237,\n      // height: 45,\n      color: 0xffffffff,\n      fontSize: 40,\n      parent: bg,\n    });\n\n    nodes.push(node);\n  }\n\n  console.log(`Created ${numOuterNodes} nodes with the same text`);\n\n  // create 100 animations\n  const animate = () => {\n    nodes.forEach((node) => {\n      node\n        .animate(\n          {\n            x: randomIntBetween(endMin, endMax),\n            y: randomIntBetween(endMin, endMax),\n          },\n          {\n            duration: 3000,\n            loop: true,\n          },\n        )\n        .start();\n    });\n  };\n\n  animate();\n}\n"],"names":["randomIntBetween","from","to","Math","floor","random","stressSingleLevelText","_0","__async","arguments","_ref","renderer","testRoot","perfMultiplier","_regeneratorRuntime","mark","_callee","numOuterNodes","nodes","startMin","startMax","endMin","endMax","bg","i","node","animate","wrap","_callee$","_context","prev","next","createNode","width","height","color","parent","createTextNode","x","y","fontFamily","textRendererOverride","text","fontSize","push","console","log","concat","forEach","duration","loop","start","stop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAsBA,IAAMA,gBAAmB,GAAA,SAAnBA,gBAAmBA,CAACC,IAAc,EAAAC,EAAA;UAAA,OACtCC,IAAK,CAAAC,KAAA,CAAMD,IAAK,CAAAE,MAAA,CAAA,CAAY,IAAAH,EAAA,GAAKD,IAAO,GAAA,CAAA,CAAA,GAAKA,IAAI,CAAA;QAAA;QAEnD,SAAAK,qBAAAA,CAA+BC,EAIX,EAAA;UAJW,OAAAC,OAAA,CAAA,IAAA,EAAAC,SAAA,EAAA,UAAAC,IAAA;YAAA,IAC7BC,QAAA,GAAAD,IAAA,CAAAC,QAAA;cACAC,QAAA,GAAAF,IAAA,CAAAE,QAAA;cACAC,cAAA,GAAAH,IAAA,CAAAG,cAAA;YAAA,oBAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;cAAA,IAAAC,aAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,EAAA,EAAAC,CAAA,EAAAC,IAAA,EAAAC,OAAA;cAAA,OAAAZ,mBAAA,GAAAa,IAAA,UAAAC,SAAAC,QAAA;gBAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;kBAAA;oBAGMd,gBAAgB,GAAM,GAAAJ,cAAA;oBACtBK,QAAiB,EAAC;oBAElBC,QAAW,GAAA,CAAA,GAAA;oBACXC,QAAW,GAAA,GAAA;oBACXC,MAAS,GAAA,CAAA,GAAA;oBACTC,MAAS,GAAA,GAAA;oBAETC,EAAA,GAAKZ,SAASqB,UAAW,CAAA;sBAC7BC,KAAO,EAAA,IAAA;sBACPC,MAAQ,EAAA,IAAA;sBACRC,KAAO,EAAA,UAAA;sBACPC,MAAQ,EAAAxB;oBAAA,CACT,CAAA;oBAED,KAASY,CAAI,GAAA,CAAA,EAAGA,CAAI,GAAAP,aAAA,EAAeO,CAAK,EAAA,EAAA;sBAChCC,IAAA,GAAOd,SAAS0B,cAAe,CAAA;wBACnCC,CAAA,EAAGtC,gBAAiB,CAAAmB,QAAA,EAAUC,QAAQ,CAAA;wBACtCmB,CAAA,EAAGvC,gBAAiB,CAAAmB,QAAA,EAAUC,QAAQ,CAAA;wBACtCoB,UAAY,EAAA,QAAA;wBACZC,oBAAsB,EAAA,KAAA;wBACtBC,IAAM,EAAA,eAAA;wBAAA;wBAAA;wBAAA;wBAINP,KAAO,EAAA,UAAA;wBACPQ,QAAU,EAAA,EAAA;wBACVP,MAAQ,EAAAb;sBAAA,CACT,CAAA;sBAEDL,KAAA,CAAM0B,KAAKnB,IAAI,CAAA;oBACjB;oBAEQoB,OAAA,CAAAC,GAAA,YAAAC,MAAA,CAAe9B,aAAa,8BAA2B,CAAA;oBAGzDS,UAAU,SAAVA,UAAgB;sBACdR,KAAA,CAAA8B,OAAA,CAAQ,UAACvB,IAAS,EAAA;wBAEnBA,IAAA,CAAAC,OAAA,CACC;0BACEY,CAAA,EAAGtC,gBAAiB,CAAAqB,MAAA,EAAQC,MAAM,CAAA;0BAClCiB,CAAA,EAAGvC,gBAAiB,CAAAqB,MAAA,EAAQC,MAAM;wBACpC,CAAA,EACA;0BACE2B,QAAU,EAAA,GAAA;0BACVC,IAAM,EAAA;wBACR,GAEDC,KAAM,CAAA,CAAA;sBAAA,CACV,CAAA;oBAAA,CACH;oBAEQzB,OAAA,EAAA;kBAAA;kBAAA;oBAAA,OAAAG,QAAA,CAAAuB,IAAA;gBAAA;cAAA,GAAApC,OAAA;YAAA;UAAA,CACV,CAAA;QAAA;;;;"}