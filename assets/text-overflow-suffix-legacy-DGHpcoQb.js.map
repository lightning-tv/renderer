{"version":3,"file":"text-overflow-suffix-legacy-DGHpcoQb.js","sources":["../../tests/text-overflow-suffix.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ITextNodeProps, RendererMain } from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { paginateTestRows, type TestRow } from '../common/paginateTestRows.js';\nimport { PageContainer } from '../common/PageContainer.js';\nimport { constructTestRow } from '../common/constructTestRow.js';\nimport { getLoremIpsum } from '../common/LoremIpsum.js';\n\nexport async function automation(settings: ExampleSettings) {\n  // Snapshot all the pages\n  await (await test(settings)).snapshotPages();\n}\n\nexport default async function test(settings: ExampleSettings) {\n  const { renderer } = settings;\n  const pageContainer = new PageContainer(settings, {\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    title: 'Text Overflow Suffix',\n  });\n\n  await paginateTestRows(pageContainer, [\n    ...generateOverflowSuffixTest(renderer, 'sdf'),\n    ...generateOverflowSuffixTest(renderer, 'canvas'),\n  ]);\n\n  return pageContainer;\n}\n\nconst NODE_PROPS = {\n  x: 100,\n  y: 100,\n  width: 200,\n  height: 200,\n  color: 0x000000ff,\n  text: getLoremIpsum(100),\n  fontFamily: 'Ubuntu',\n  textRendererOverride: 'sdf',\n  fontSize: 20,\n  lineHeight: 28,\n  contain: 'both',\n} satisfies Partial<ITextNodeProps>;\n\nfunction generateOverflowSuffixTest(\n  renderer: RendererMain,\n  textRenderer: 'canvas' | 'sdf',\n): TestRow[] {\n  return [\n    {\n      title: `Text Node ('overflowSuffix', ${textRenderer})`,\n      content: async (rowNode) => {\n        const nodeProps = {\n          ...NODE_PROPS,\n          textRendererOverride: textRenderer,\n        } satisfies Partial<ITextNodeProps>;\n\n        const baselineNode = renderer.createTextNode({\n          ...nodeProps,\n        });\n\n        const position = {\n          x: 0,\n          y: 0,\n        };\n\n        baselineNode.x = position.x;\n        baselineNode.y = position.y;\n\n        return await constructTestRow({ renderer, rowNode }, [\n          baselineNode,\n          'overflowSuffix: \"...\" ->',\n          renderer.createTextNode({\n            ...nodeProps,\n            ...position,\n            overflowSuffix: '...',\n            maxLines: 1,\n          }),\n          'overflowSuffix: \"..\" ->',\n          renderer.createTextNode({\n            ...nodeProps,\n            ...position,\n            overflowSuffix: '..',\n            maxLines: 1,\n          }),\n        ]);\n      },\n    },\n  ] satisfies TestRow[];\n}\n"],"names":["automation","settings","__async","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","test","sent","snapshotPages","stop","_callee2","renderer","pageContainer","_callee2$","_context2","PageContainer","width","appWidth","height","appHeight","title","paginateTestRows","concat","_toConsumableArray","generateOverflowSuffixTest","abrupt","NODE_PROPS","x","y","color","text","getLoremIpsum","fontFamily","textRendererOverride","fontSize","lineHeight","contain","textRenderer","_this","content","rowNode","_callee3","nodeProps","baselineNode","position","_callee3$","_context3","__spreadProps","createTextNode","__spreadValues","constructTestRow","overflowSuffix","maxLines"],"mappings":"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"}