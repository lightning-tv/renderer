{"version":3,"file":"test-legacy-BYoziuXP.js","sources":["../../common/Character.ts","../../tests/test.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  INode,\n  INodeProps,\n  RendererMain,\n  TextureMap,\n} from '@lightningjs/renderer';\nimport { assertTruthy } from '@lightningjs/renderer/utils';\n\nexport class Character {\n  node: INode;\n  curIntervalAnimation: ReturnType<typeof setTimeout> | null = null;\n  direction!: 'left' | 'right'; // Set in setState\n  state!: 'idle' | 'walk' | 'run' | 'jump'; // Set in setState\n\n  constructor(\n    private props: Partial<INodeProps>,\n    private renderer: RendererMain,\n    private rightFrames: InstanceType<TextureMap['SubTexture']>[],\n  ) {\n    this.node = renderer.createNode({\n      x: props.x,\n      y: props.y,\n      width: 200 / 2,\n      height: 300 / 2,\n      texture: rightFrames[0],\n      parent: renderer.root,\n      zIndex: props.zIndex,\n    });\n    assertTruthy(this.node);\n    this.setState('right', 'idle');\n  }\n\n  setState(\n    direction: 'left' | 'right',\n    state: 'idle' | 'walk' | 'run' | 'jump',\n  ) {\n    if (this.direction === direction && this.state === state) {\n      return;\n    }\n    this.direction = direction;\n    this.state = state;\n    switch (state) {\n      case 'idle':\n        this.animateCharacter(direction, 2, 3, 100);\n        break;\n      case 'walk':\n        this.animateCharacter(direction, 0, 7, 100);\n        break;\n      case 'run':\n        this.animateCharacter(direction, 0, 7, 100);\n        break;\n      case 'jump':\n        this.animateCharacter(direction, 0, 7, 100);\n        break;\n    }\n  }\n\n  private animateCharacter(\n    direction: 'left' | 'right',\n    iStart: number,\n    iEnd: number,\n    intervalMs: number,\n  ) {\n    let curI = iStart;\n    const flipX = direction === 'left' ? true : false;\n    if (iEnd + 1 > this.rightFrames.length || iStart < 0) {\n      throw new Error('Animation out of bounds');\n    }\n    if (this.curIntervalAnimation) {\n      clearInterval(this.curIntervalAnimation);\n    }\n    const nextFrame = () => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.node.texture = this.rightFrames[curI]!;\n      this.node.textureOptions.flipX = flipX;\n      curI++;\n      if (curI > iEnd) {\n        curI = iStart;\n      }\n    };\n    nextFrame();\n    this.curIntervalAnimation = setInterval(nextFrame, intervalMs);\n  }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { type INode, type IAnimationController } from '@lightningjs/renderer';\nimport rocko from '../assets/rocko.png';\nimport elevator from '../assets/elevator.png';\nimport spritemap from '../assets/spritemap.png';\nimport { Character } from '../common/Character.js';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  const redRect = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n    color: 0xff0000ff,\n    shader: renderer.createShader('RoundedRectangle', {\n      radius: 50,\n    }),\n    parent: testRoot,\n  });\n\n  const holder = renderer.createNode({\n    x: 150,\n    y: 900,\n    width: 100,\n    height: 100,\n    color: 0xff0000ff,\n    parent: testRoot,\n    zIndex: 0,\n    zIndexLocked: 0,\n    alpha: 0.5,\n  });\n\n  const child = renderer.createNode({\n    x: 111,\n    y: 0,\n    width: 111,\n    height: 111,\n    color: 0xff0000ff,\n    parent: holder,\n    zIndex: 12,\n    alpha: 0.5,\n  });\n\n  const greenRect = renderer.createNode({\n    x: 100,\n    y: 0,\n    width: 100,\n    height: 100,\n    color: 0x00ff00ff,\n    parent: testRoot,\n  });\n\n  const shaft = renderer.createNode({\n    x: 395,\n    y: 0,\n    width: 210,\n    height: renderer.settings.appHeight,\n    color: 0xffffffff,\n    texture: renderer.createTexture('NoiseTexture', {\n      width: 210,\n      height: renderer.settings.appHeight,\n    }),\n    parent: testRoot,\n  });\n\n  /*\n   * Begin: Relative Positioning Platform\n   */\n\n  const relativePositioningPlatform = renderer.createNode({\n    x: 605,\n    y: 230,\n    width: 1315,\n    height: 50,\n    color: 0xaabb66ff,\n    texture: renderer.createTexture('NoiseTexture', {\n      width: 1315,\n      height: 50,\n    }),\n    parent: testRoot,\n  });\n\n  const relativePositioningChild = renderer.createNode({\n    x: 10,\n    y: 10,\n    width: 1315 - 20,\n    height: 30,\n    color: 0xaaedffaa,\n    parent: relativePositioningPlatform,\n    texture: renderer.createTexture('NoiseTexture', {\n      width: 1315 - 20,\n      height: 30,\n    }),\n  });\n\n  const relativePositioningGrandchild = renderer.createNode({\n    x: 10,\n    y: 10,\n    width: 1315 - 20 - 20,\n    height: 10,\n    color: 0xff00ffff,\n    parent: relativePositioningChild,\n    texture: renderer.createTexture('NoiseTexture', {\n      width: 1315 - 20 - 20,\n      height: 50,\n    }),\n  });\n\n  /*\n   * End: Relative Positioning Platform\n   */\n\n  const rockoRect = renderer.createNode({\n    x: -181,\n    y: renderer.settings.appHeight - 218,\n    width: 181,\n    height: 218,\n    src: rocko,\n    color: 0xffffffff,\n    parent: testRoot,\n    zIndex: 1,\n  });\n\n  const elevatorRect = renderer.createNode({\n    x: 400,\n    y: 0,\n    width: 200,\n    height: 268,\n    src: elevator,\n    color: 0x0000ffff,\n    parent: testRoot,\n    zIndex: 2,\n    alpha: 0.9,\n  });\n\n  const elevatorNumber = renderer.createTextNode({\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 268,\n    color: 0xffffffff,\n    alpha: 1.0,\n    text: 'Dn',\n    contain: 'both',\n    fontFamily: 'Ubuntu',\n    fontSize: 100,\n    textAlign: 'center',\n    parent: elevatorRect,\n    zIndex: 3,\n  });\n\n  setInterval(() => {\n    shaft.texture = renderer.createTexture('NoiseTexture', {\n      width: 210,\n      height: renderer.settings.appHeight,\n      cacheId: Math.floor(Math.random() * 100000),\n    });\n    shaft.textureOptions.preload = true;\n  }, 1000);\n\n  // setTimeout required for ThreadX right now because the emit() that sends\n  // the animation to the renderer worker doesn't work until the Node is fully\n  // shared to the worker.\n  let rockoAnimation: IAnimationController | null = null;\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  setTimeout(async () => {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // force behind elevator\n      rockoRect.zIndex = 1;\n\n      rockoAnimation = rockoRect.animate({}, { duration: 1000 }).start();\n      await rockoAnimation.waitUntilStopped();\n\n      rockoAnimation = rockoRect\n        .animate(\n          {\n            x: 400,\n          },\n          {\n            duration: 1000,\n          },\n        )\n        .start();\n      await rockoAnimation.waitUntilStopped();\n\n      rockoAnimation = rockoRect\n        .animate(\n          {\n            y: elevatorRect.height - rockoRect.height,\n          },\n          {\n            duration: 1000,\n          },\n        )\n        .start();\n      await rockoAnimation.waitUntilStopped();\n\n      // force before elevator\n      rockoRect.zIndex = 3;\n\n      rockoAnimation = rockoRect\n        .animate(\n          {\n            x: renderer.settings.appWidth,\n            // y: 100,\n          },\n          {\n            duration: 2616,\n          },\n        )\n        .start();\n      await rockoAnimation.waitUntilStopped();\n\n      console.log('resetting rocko');\n      rockoRect.x = -rockoRect.width;\n      rockoRect.y = renderer.settings.appHeight - 218;\n      rockoRect.flush();\n    }\n  }, 1000);\n\n  let elevatorAnimation: IAnimationController | null = null;\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  setTimeout(async () => {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      elevatorNumber.text = 'Dn';\n      elevatorRect.color = 0x0000ffff;\n      elevatorAnimation = elevatorRect\n        .animate(\n          {\n            y: 1080 - elevatorRect.height,\n          },\n          {\n            duration: 1000,\n          },\n        )\n        .start();\n      await elevatorAnimation.waitUntilStopped();\n\n      elevatorAnimation = elevatorRect\n        .animate(\n          {\n            // y: 1080 - elevatorRect.height,\n          },\n          {\n            duration: 1000,\n          },\n        )\n        .start();\n      await elevatorAnimation.waitUntilStopped();\n\n      elevatorNumber.text = 'Up';\n\n      elevatorRect.color = 0x00ff00ff;\n      elevatorAnimation = elevatorRect\n        .animate(\n          {\n            y: 0,\n          },\n          {\n            duration: 1000,\n          },\n        )\n        .start();\n      await elevatorAnimation.waitUntilStopped();\n\n      elevatorRect.color = 0x00ff00ff;\n      elevatorAnimation = elevatorRect\n        .animate(\n          {\n            // y: 0,\n          },\n          {\n            duration: 2616,\n          },\n        )\n        .start();\n      await elevatorAnimation.waitUntilStopped();\n    }\n  }, 1000);\n\n  let blueRect: INode | null = null;\n\n  const interval = setInterval(() => {\n    redRect.color++;\n  }, 100);\n\n  setInterval(() => {\n    if (blueRect) {\n      blueRect.destroy();\n      blueRect = null;\n    } else {\n      blueRect = renderer.createNode({\n        x: 200,\n        y: 0,\n        width: 100,\n        height: 100,\n        color: 0x0000ffff,\n        parent: testRoot,\n      });\n    }\n  }, 500);\n\n  setInterval(() => {\n    if (greenRect.parent) {\n      greenRect.parent = null;\n    } else {\n      greenRect.parent = testRoot;\n    }\n  }, 1000);\n\n  /*\n   * Begin: Sprite Map Demo\n   */\n\n  const spriteMapTexture = renderer.createTexture('ImageTexture', {\n    src: spritemap,\n  });\n\n  const frames = Array.from(Array(8).keys()).map((i) => {\n    const x = (i % 8) * 100;\n    const y = Math.floor(i / 8) * 150;\n    return renderer.createTexture('SubTexture', {\n      texture: spriteMapTexture,\n      x,\n      y,\n      width: 100,\n      height: 150,\n    });\n  });\n\n  // add bunch of characters\n  for (let i = 0; i < 5; i++) {\n    new Character(\n      { x: 800 + i * 200, y: 125, zIndex: i % 2 === 0 ? 3 : 1 },\n      renderer,\n      frames,\n    );\n  }\n\n  const character = new Character(\n    { x: 1800, y: 125, zIndex: 6 },\n    renderer,\n    frames,\n  );\n\n  // When user presses left or right arrow, move the character\n  // When user presses spacebar, jump\n  window.addEventListener('keydown', (e) => {\n    if (e.code === 'ArrowLeft') {\n      character.setState('left', 'walk');\n      character.node\n        .animate(\n          {\n            x: character.node.x - 30,\n          },\n          { duration: 200 },\n        )\n        .start();\n    } else if (e.code === 'ArrowRight') {\n      character.setState('right', 'walk');\n      character.node\n        .animate(\n          {\n            x: character.node.x + 30,\n          },\n          { duration: 200 },\n        )\n        .start();\n    } else if (e.code === 'Space') {\n      character.setState(character.direction, 'jump');\n    }\n  });\n\n  window.addEventListener('keyup', (e) => {\n    if (e.code === 'ArrowLeft') {\n      character.setState('left', 'idle');\n    } else if (e.code === 'ArrowRight') {\n      character.setState('right', 'idle');\n    }\n  });\n\n  /*\n   * End: Sprite Map Demo\n   */\n\n  /// Text Demo\n  const textNode = renderer.createTextNode({\n    x: shaft.x + shaft.width,\n    y: relativePositioningPlatform.y + relativePositioningPlatform.height,\n    width: 300,\n    height: 200,\n    color: 0xffffffff,\n    alpha: 1.0,\n    text: 'Text Test: 0',\n    fontFamily: 'Ubuntu',\n    contain: 'width',\n    textAlign: 'center',\n    fontSize: 100,\n    scale: 1,\n    parent: testRoot,\n  });\n\n  const noChangeText = renderer.createTextNode({\n    x: renderer.settings.appWidth,\n    y: renderer.settings.appHeight,\n    mount: 1,\n    width: 300,\n    height: 1,\n    color: 0xffffffff,\n    alpha: 1.0,\n    text: 'Rocko Test',\n    fontFamily: 'NotoSans',\n    contain: 'width',\n    textAlign: 'center',\n    fontSize: 100,\n    parent: testRoot,\n  });\n\n  let count = 1;\n  setInterval(() => {\n    textNode.text = `Text Test: ${count++}`;\n  }, 1000);\n\n  console.log('ready!');\n}\n"],"names":["Character","props","renderer","rightFrames","_classCallCheck","__publicField","node","createNode","x","y","width","height","texture","parent","root","zIndex","assertTruthy","setState","_createClass","key","value","direction","state","animateCharacter","iStart","iEnd","intervalMs","_this","curI","flipX","length","Error","curIntervalAnimation","clearInterval","nextFrame","textureOptions","setInterval","test","_0","__async","arguments","_ref","_this2","testRoot","_regeneratorRuntime","mark","_callee3","redRect","holder","greenRect","shaft","relativePositioningPlatform","relativePositioningChild","rockoRect","elevatorRect","elevatorNumber","rockoAnimation","elevatorAnimation","blueRect","spriteMapTexture","frames","i","character","textNode","count","wrap","_callee3$","_context3","prev","next","color","shader","createShader","radius","zIndexLocked","alpha","settings","appHeight","createTexture","src","rocko","elevator","createTextNode","text","contain","fontFamily","fontSize","textAlign","cacheId","Math","floor","random","preload","setTimeout","_callee","_callee$","_context","animate","duration","start","waitUntilStopped","appWidth","console","log","flush","stop","_callee2","_callee2$","_context2","destroy","spritemap","Array","from","keys","map","window","addEventListener","e","code","scale","mount","concat"],"mappings":"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"}