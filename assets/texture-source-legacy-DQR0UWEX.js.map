{"version":3,"file":"texture-source-legacy-DQR0UWEX.js","sources":["../../tests/texture-source.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  type INode,\n  type Dimensions,\n  type NodeLoadedEventHandler,\n} from '@lightningjs/renderer';\nimport rockoPng from '../assets/rocko.png';\nimport lightningPng from '../assets/lightning.png';\nimport elevatorPng from '../assets/elevator.png';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport async function automation(settings: ExampleSettings) {\n  await test(settings);\n  await settings.snapshot();\n}\n\nexport default async function test({ renderer, testRoot }: ExampleSettings) {\n  const FONT_SIZE = 45;\n  const BEGIN_Y = FONT_SIZE;\n\n  const header = renderer.createTextNode({\n    fontFamily: 'Ubuntu',\n    text: `PNG Source Test`,\n    fontSize: FONT_SIZE,\n    parent: testRoot,\n  });\n\n  const curX = 0;\n  let curY = BEGIN_Y;\n  let curTest = 1;\n\n  const rocko = renderer.createNode({\n    x: curX,\n    y: curY,\n    src: rockoPng,\n    parent: testRoot,\n  });\n\n  await execLoadingTest(rocko, 181, 218);\n\n  const elevator = renderer.createNode({\n    x: curX,\n    y: curY,\n    src: elevatorPng,\n    parent: testRoot,\n    srcX: 120,\n    srcY: 0,\n    srcHeight: 268,\n    srcWidth: 100,\n  });\n\n  await execLoadingTest(elevator, 100, 268);\n\n  const lightningNode = renderer.createNode({\n    x: curX,\n    y: curY,\n    src: lightningPng,\n    srcHeight: 100,\n    srcWidth: 100,\n    parent: testRoot,\n  });\n\n  await execLoadingTest(lightningNode, 100, 100);\n\n  function waitForTxLoaded(imgNode: INode) {\n    return new Promise<Dimensions>((resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error('TIMEOUT'));\n      }, 1000);\n      imgNode.once('loaded', ((target, payload) => {\n        resolve(payload.dimensions);\n      }) satisfies NodeLoadedEventHandler);\n    });\n  }\n\n  async function execLoadingTest(\n    imgNode: INode,\n    expectedWidth: number,\n    expectedHeight: number,\n  ) {\n    const textNode = renderer.createTextNode({\n      fontFamily: 'Ubuntu',\n      x: curX,\n      text: '',\n      fontSize: FONT_SIZE,\n      parent: testRoot,\n    });\n\n    let exception: string | false = false;\n    let dimensions: Dimensions = { width: 0, height: 0 };\n    try {\n      dimensions = await waitForTxLoaded(imgNode);\n    } catch (e: unknown) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      exception = (e as any)?.message ?? 'Unknown';\n    }\n\n    imgNode.width = dimensions.width;\n    imgNode.height = dimensions.height;\n\n    textNode.y = imgNode.y + imgNode.height;\n    let result = 'Fail';\n    let expectedPostfix = '';\n    if (\n      !exception &&\n      imgNode.width === expectedWidth &&\n      imgNode.height === expectedHeight\n    ) {\n      textNode.color = 0x00ff00ff;\n      result = 'Pass';\n    } else {\n      textNode.color = 0xff0000ff;\n      if (exception) {\n        expectedPostfix = ` (exception: ${exception})`;\n      } else {\n        expectedPostfix = ` (expected ${expectedWidth}x${expectedHeight})`;\n      }\n    }\n    textNode.text = `${curTest}. Loaded Event Test: ${result} (${imgNode.width}x${imgNode.height})${expectedPostfix}`;\n    curY = textNode.y + FONT_SIZE;\n    curTest++;\n  }\n}\n"],"names":["automation","settings","__async","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","test","snapshot","stop","_0","arguments","_ref","renderer","testRoot","_callee3","FONT_SIZE","BEGIN_Y","curX","curY","curTest","rocko","elevator","lightningNode","waitForTxLoaded","execLoadingTest","_callee3$","_context3","_execLoadingTest","imgNode","expectedWidth","expectedHeight","_callee2","_a","textNode","exception","dimensions","result","expectedPostfix","_callee2$","_context2","createTextNode","fontFamily","x","text","fontSize","parent","width","height","sent","t0","message","y","color","concat","Promise","resolve","reject","setTimeout","Error","once","target","payload","createNode","src","rockoPng","elevatorPng","srcX","srcY","srcHeight","srcWidth","lightningPng"],"mappings":"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"}