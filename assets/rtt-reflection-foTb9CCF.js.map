{"version":3,"file":"rtt-reflection-foTb9CCF.js","sources":["../../tests/rtt-reflection.ts"],"sourcesContent":["import type { ExampleSettings } from '../common/ExampleSettings.js';\n\nconst randomColor = () => {\n  const randomInt = Math.floor(Math.random() * Math.pow(2, 32));\n  const hexString = randomInt.toString(16).padStart(8, '0');\n  return parseInt(hexString, 16);\n};\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  const node = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 1920,\n    height: 1080,\n    color: 0x000000ff,\n    parent: testRoot,\n  });\n\n  const rootRenderToTextureNode = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 1920,\n    height: 540,\n    parent: node,\n    rtt: true,\n    zIndex: 5,\n    color: 0xffffffff,\n  });\n\n  const reflectionNode = renderer.createNode({\n    x: 0,\n    y: 540,\n    width: 1920,\n    height: 540,\n    colorTop: 0xc0ffee00,\n    colorBottom: 0x97abffff,\n    parent: node,\n    scaleY: -1,\n    alpha: 0.8,\n    // Copy source texture from rootRenderToTextureNode\n    texture: rootRenderToTextureNode.texture,\n  });\n\n  new Array(105).fill(0).forEach((_, i) => {\n    const a = renderer.createNode({\n      parent: rootRenderToTextureNode,\n      x: (i % 15) * 120 + 50,\n      y: Math.floor(i / 15) * 140 + 1920,\n      width: 120,\n      height: 120,\n      scale: 0.5,\n      src: `https://picsum.photos/id/${i + 30}/120/120`,\n    });\n\n    const animation = a.animate(\n      {\n        rotation: Math.random() * Math.PI * 2,\n        scale: 1.5,\n        y: Math.floor(i / 15) * 140 + 250,\n      },\n      {\n        duration: Math.random() * 4000 + 3000,\n        loop: true,\n        stopMethod: 'reverse',\n        easing: 'ease-in-out',\n      },\n    );\n    animation.start();\n  });\n\n  const rttLabel = renderer.createTextNode({\n    parent: rootRenderToTextureNode,\n    x: 80,\n    y: 540,\n    fontFamily: 'Ubuntu',\n    fontSize: 40,\n    text: 'RTT reflection demo',\n  });\n\n  const animation = rttLabel.animate(\n    {\n      y: 420,\n    },\n    {\n      duration: 6000,\n      delay: 400,\n      loop: true,\n      stopMethod: 'reverse',\n      easing: 'ease-in-out',\n    },\n  );\n  animation.start();\n\n  setInterval(() => {\n    const a = reflectionNode.animate(\n      {\n        colorTop: randomColor(),\n        colorBottom: randomColor(),\n      },\n      {\n        duration: 4000,\n        easing: 'ease-in-out',\n      },\n    );\n    a.start();\n  }, 4400);\n}\n"],"names":["animation"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA,MAAM,cAAc,MAAM;AAClB,QAAA,YAAY,KAAK,MAAM,KAAK,WAAW,KAAK,IAAI,GAAG,EAAE,CAAC;AAC5D,QAAM,YAAY,UAAU,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG;AACjD,SAAA,SAAS,WAAW,EAAE;AAC/B;AAEA,SAAA,cAA+B,IAAyC;AAAzC,SAAA,QAAA,MAAA,WAAA,WAAA,EAAE,UAAU,YAA6B;AAChE,UAAA,OAAO,SAAS,WAAW;AAAA,MAC/B,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AAEK,UAAA,0BAA0B,SAAS,WAAW;AAAA,MAClD,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,OAAO;AAAA,IAAA,CACR;AAEK,UAAA,iBAAiB,SAAS,WAAW;AAAA,MACzC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA;AAAA,MAEP,SAAS,wBAAwB;AAAA,IAAA,CAClC;AAEG,QAAA,MAAM,GAAG,EAAE,KAAK,CAAC,EAAE,QAAQ,CAAC,GAAG,MAAM;AACjC,YAAA,IAAI,SAAS,WAAW;AAAA,QAC5B,QAAQ;AAAA,QACR,GAAI,IAAI,KAAM,MAAM;AAAA,QACpB,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,MAAM;AAAA,QAC9B,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,KAAK,4BAA4B,WAAI,IAAE;AAAA,MAAA,CACxC;AAED,YAAMA,aAAY,EAAE;AAAA,QAClB;AAAA,UACE,UAAU,KAAK,OAAO,IAAI,KAAK,KAAK;AAAA,UACpC,OAAO;AAAA,UACP,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,MAAM;AAAA,QAChC;AAAA,QACA;AAAA,UACE,UAAU,KAAK,OAAO,IAAI,MAAO;AAAA,UACjC,MAAM;AAAA,UACN,YAAY;AAAA,UACZ,QAAQ;AAAA,QACV;AAAA,MAAA;AAEFA,iBAAU,MAAM;AAAA,IAAA,CACjB;AAEK,UAAA,WAAW,SAAS,eAAe;AAAA,MACvC,QAAQ;AAAA,MACR,GAAG;AAAA,MACH,GAAG;AAAA,MACH,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,MAAM;AAAA,IAAA,CACP;AAED,UAAM,YAAY,SAAS;AAAA,MACzB;AAAA,QACE,GAAG;AAAA,MACL;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,OAAO;AAAA,QACP,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,QAAQ;AAAA,MACV;AAAA,IAAA;AAEF,cAAU,MAAM;AAEhB,gBAAY,MAAM;AAChB,YAAM,IAAI,eAAe;AAAA,QACvB;AAAA,UACE,UAAU,YAAY;AAAA,UACtB,aAAa,YAAY;AAAA,QAC3B;AAAA,QACA;AAAA,UACE,UAAU;AAAA,UACV,QAAQ;AAAA,QACV;AAAA,MAAA;AAEF,QAAE,MAAM;AAAA,OACP,IAAI;AAAA,EAAA,CACT;AAAA;"}