{"version":3,"file":"inspector-BIzbgRXG.js","sources":["../../tests/inspector.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport logo from '../assets/lightning.png';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  const bg = renderer.createNode({\n    width: 1920,\n    height: 1080,\n    color: 0x000000ff,\n    parent: testRoot,\n  });\n\n  const dataNodeCheckBox = renderer.createNode({\n    width: 100,\n    height: 100,\n    x: 80,\n    y: 200,\n    color: 0xff0000ff,\n    parent: bg,\n  });\n\n  const dataNode = renderer.createNode({\n    width: 505,\n    height: 101,\n    x: 200,\n    y: 200,\n    src: logo,\n    parent: bg,\n    data: {\n      id: 'dataNode',\n      number: 1,\n      boolean: true,\n    },\n  });\n\n  const tooLongStringCheckBox = renderer.createNode({\n    width: 100,\n    height: 100,\n    x: 80,\n    y: 400,\n    color: 0xff0000ff,\n    parent: bg,\n  });\n\n  const tooLongString = renderer.createNode({\n    width: 505,\n    height: 101,\n    x: 200,\n    y: 400,\n    src: logo,\n    parent: bg,\n    data: {\n      id: 'tooLongString',\n      b: 'a'.repeat(2049),\n    },\n  });\n\n  const textNodeCheckBox = renderer.createNode({\n    width: 100,\n    height: 100,\n    x: 80,\n    y: 600,\n    color: 0xff0000ff,\n    parent: bg,\n  });\n\n  const textNode = renderer.createTextNode({\n    x: 200,\n    y: 600,\n    height: 100,\n    text: 'Hello World',\n    fontFamily: 'Ubuntu',\n    fontSize: 100,\n    parent: bg,\n    data: {\n      id: 'textNode',\n    },\n  });\n\n  const testDetailsText = renderer.createTextNode({\n    x: 30,\n    y: 80,\n    height: 100,\n    text: 'Boxes should turn green if the inspector is enabled',\n    fontFamily: 'Ubuntu',\n    fontSize: 50,\n    parent: bg,\n  });\n\n  const testQparamDetailsText = renderer.createTextNode({\n    x: 30,\n    y: 800,\n    height: 100,\n    text: 'Please make sure to run this test with ?inspector=true',\n    fontFamily: 'Ubuntu',\n    fontSize: 50,\n    parent: bg,\n  });\n\n  setTimeout(() => {\n    // Select the first element with data-id=\"dataNode\"\n    const domDataNode = document.querySelector('[data-id=\"dataNode\"]');\n    if (domDataNode) {\n      dataNodeCheckBox.color = 0x00ff00ff;\n    }\n\n    const domTooLongString = document.querySelector(\n      '[data-id=\"tooLongString\"]',\n    );\n\n    if (domTooLongString) {\n      tooLongStringCheckBox.color = 0x00ff00ff;\n    }\n\n    const domTextNode = document.querySelector('[data-id=\"textNode\"]');\n\n    if (domTextNode) {\n      textNodeCheckBox.color = 0x00ff00ff;\n    }\n  }, 1000);\n}\n"],"names":["logo"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,UAA+B,IAAyC;AAAzC,SAAA,QAAA,MAAA,WAAA,WAAA,EAAE,UAAU,YAA6B;AAChE,UAAA,KAAK,SAAS,WAAW;AAAA,MAC7B,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AAEK,UAAA,mBAAmB,SAAS,WAAW;AAAA,MAC3C,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AAEgB,aAAS,WAAW;AAAA,MACnC,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAKA;AAAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,IAAI;AAAA,QACJ,QAAQ;AAAA,QACR,SAAS;AAAA,MACX;AAAA,IAAA,CACD;AAEK,UAAA,wBAAwB,SAAS,WAAW;AAAA,MAChD,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AAEqB,aAAS,WAAW;AAAA,MACxC,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAKA;AAAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,IAAI;AAAA,QACJ,GAAG,IAAI,OAAO,IAAI;AAAA,MACpB;AAAA,IAAA,CACD;AAEK,UAAA,mBAAmB,SAAS,WAAW;AAAA,MAC3C,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AAEgB,aAAS,eAAe;AAAA,MACvC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,IAAI;AAAA,MACN;AAAA,IAAA,CACD;AAEuB,aAAS,eAAe;AAAA,MAC9C,GAAG;AAAA,MACH,GAAG;AAAA,MACH,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,QAAQ;AAAA,IAAA,CACT;AAE6B,aAAS,eAAe;AAAA,MACpD,GAAG;AAAA,MACH,GAAG;AAAA,MACH,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,QAAQ;AAAA,IAAA,CACT;AAED,eAAW,MAAM;AAET,YAAA,cAAc,SAAS,cAAc,sBAAsB;AACjE,UAAI,aAAa;AACf,yBAAiB,QAAQ;AAAA,MAC3B;AAEA,YAAM,mBAAmB,SAAS;AAAA,QAChC;AAAA,MAAA;AAGF,UAAI,kBAAkB;AACpB,8BAAsB,QAAQ;AAAA,MAChC;AAEM,YAAA,cAAc,SAAS,cAAc,sBAAsB;AAEjE,UAAI,aAAa;AACf,yBAAiB,QAAQ;AAAA,MAC3B;AAAA,OACC,GAAI;AAAA,EAAA,CACT;AAAA;"}