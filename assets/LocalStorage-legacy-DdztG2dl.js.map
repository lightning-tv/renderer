{"version":3,"file":"LocalStorage-legacy-DdztG2dl.js","sources":["../../common/LocalStorage.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Retreive state from local storage (if localStorage is available)\n// and set the state of the app accordingly.\nexport function loadStorage<T>(testName: string): Partial<T> | null {\n  if (typeof window.localStorage === 'undefined') {\n    return null;\n  }\n  try {\n    const serializedState = localStorage.getItem(`${testName}-state`);\n    if (serializedState === null) {\n      return null;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return null;\n  }\n}\n\n// Save the state of the app to local storage (if localStorage is available).\nexport function saveStorage<T>(testName: string, state: Partial<T>): void {\n  if (typeof window.localStorage === 'undefined') {\n    return;\n  }\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(`${testName}-state`, serializedState);\n  } catch (err) {\n    // Ignore write errors.\n  }\n}\n\n// Clear the state of the app from local storage (if localStorage is available).\nexport function clearStorage(testName: string): void {\n  if (typeof window.localStorage === 'undefined') {\n    return;\n  }\n  try {\n    localStorage.removeItem(`${testName}-state`);\n  } catch (err) {\n    // Ignore write errors.\n  }\n}\n"],"names":["loadStorage","testName","window","localStorage","serializedState","getItem","concat","JSON","parse","err","saveStorage","state","stringify","setItem","clearStorage","removeItem"],"mappings":";;;;;;;;;;;;QAqBO,SAASA,YAAeC,QAAqC,EAAA;UAC9D,IAAA,OAAOC,MAAO,CAAAC,YAAA,KAAiB,WAAa,EAAA;YACvC,OAAA,IAAA;UACT;UACI,IAAA;YACF,IAAMC,eAAkB,GAAAD,YAAA,CAAaE,OAAQ,IAAAC,MAAA,CAAGL,QAAQ,WAAQ,CAAA;YAChE,IAAIG,oBAAoB,IAAM,EAAA;cACrB,OAAA,IAAA;YACT;YACO,OAAAG,IAAA,CAAKC,MAAMJ,eAAe,CAAA;mBAC1BK,GAAK,EAAA;YACL,OAAA,IAAA;UACT;QACF;QAGgB,SAAAC,WAAAA,CAAeT,UAAkBU,KAAyB,EAAA;UACpE,IAAA,OAAOT,MAAO,CAAAC,YAAA,KAAiB,WAAa,EAAA;YAC9C;UACF;UACI,IAAA;YACI,IAAAC,eAAA,GAAkBG,IAAK,CAAAK,SAAA,CAAUD,KAAK,CAAA;YAC5CR,YAAA,CAAaU,OAAQ,IAAAP,MAAA,CAAGL,QAAQ,aAAUG,eAAe,CAAA;mBAClDK,GAAK,EAAA,CAEd;QACF;QAGO,SAASK,aAAab,QAAwB,EAAA;UAC/C,IAAA,OAAOC,MAAO,CAAAC,YAAA,KAAiB,WAAa,EAAA;YAC9C;UACF;UACI,IAAA;YACWA,YAAA,CAAAY,UAAA,IAAAT,MAAA,CAAcL,QAAQ,WAAQ,CAAA;mBACpCQ,GAAK,EAAA,CAEd;QACF;;;;"}