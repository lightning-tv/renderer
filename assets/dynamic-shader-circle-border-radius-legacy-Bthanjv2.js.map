{"version":3,"file":"dynamic-shader-circle-border-radius-legacy-Bthanjv2.js","sources":["../../tests/dynamic-shader-circle-border-radius.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport async function automation(settings: ExampleSettings) {\n  // Snapshot single page\n  await test(settings);\n  await settings.snapshot();\n}\n\nexport default async function test({ renderer, testRoot }: ExampleSettings) {\n  const containerOnlyCircle1 = renderer.createNode({\n    x: 40,\n    y: 120,\n    width: 400,\n    height: 400,\n    color: 0x0000ffff,\n    parent: testRoot,\n  });\n\n  const nodeCircleRed1 = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 400,\n    height: 400,\n    color: 0xff0000ff,\n    shader: renderer.createShader('DynamicShader', {\n      effects: [\n        {\n          type: 'radius',\n          props: {\n            radius: 400 / 2,\n          },\n        },\n      ],\n    }),\n    parent: containerOnlyCircle1,\n  });\n\n  const containerCircle1 = renderer.createNode({\n    x: 40 + 440,\n    y: 120,\n    width: 400,\n    height: 400,\n    color: 0x0000ffff,\n    parent: testRoot,\n  });\n\n  const nodeCircleRedWithBorder1 = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 400,\n    height: 400,\n    color: 0xff0000ff,\n    shader: renderer.createShader('DynamicShader', {\n      effects: [\n        {\n          type: 'radius',\n          props: {\n            radius: 400 / 2,\n          },\n        },\n        {\n          type: 'border',\n          props: {\n            width: 6,\n            color: 0xfafafaff,\n          },\n        },\n      ],\n    }),\n    parent: containerCircle1,\n  });\n\n  const containerOnlyCircle2 = renderer.createNode({\n    x: 40,\n    y: 120 + 440,\n    width: 152,\n    height: 152,\n    color: 0x0000ffff,\n    parent: testRoot,\n  });\n\n  const nodeCircleRed2 = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 152,\n    height: 152,\n    color: 0xff0000ff,\n    shader: renderer.createShader('DynamicShader', {\n      effects: [\n        {\n          type: 'radius',\n          props: {\n            radius: 152 / 2,\n          },\n        },\n      ],\n    }),\n    parent: containerOnlyCircle2,\n  });\n\n  const containerCircle2 = renderer.createNode({\n    x: 40 + 192,\n    y: 120 + 440,\n    width: 152,\n    height: 152,\n    color: 0x0000ffff,\n    parent: testRoot,\n  });\n\n  const nodeCircleRedWithBorder2 = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 152,\n    height: 152,\n    color: 0xff0000ff,\n    shader: renderer.createShader('DynamicShader', {\n      effects: [\n        {\n          type: 'radius',\n          props: {\n            radius: 152 / 2,\n          },\n        },\n        {\n          type: 'border',\n          props: {\n            width: 6,\n            color: 0xfafafaff,\n          },\n        },\n      ],\n    }),\n    parent: containerCircle2,\n  });\n}\n"],"names":["automation","settings","__async","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","test","snapshot","stop","_0","arguments","_ref","renderer","testRoot","_callee2","containerOnlyCircle1","containerCircle1","containerOnlyCircle2","containerCircle2","_callee2$","_context2","createNode","x","y","width","height","color","parent","shader","createShader","effects","type","props","radius"],"mappings":"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"}