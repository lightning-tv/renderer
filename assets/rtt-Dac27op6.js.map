{"version":3,"file":"rtt-Dac27op6.js","sources":["../../tests/rtt.ts"],"sourcesContent":["import type { ExampleSettings } from '../common/ExampleSettings.js';\nimport test from './alpha-blending.js';\ninterface AnimationExampleSettings {\n  duration: number;\n  easing: string;\n  delay: number;\n  loop: boolean;\n  stopMethod: 'reverse' | 'reset' | false;\n}\n\nconst animationSettings: Partial<AnimationExampleSettings> = {\n  duration: 14000,\n  delay: 400,\n  loop: true,\n  stopMethod: 'reverse',\n  easing: 'ease-in-out-back',\n};\n\nconst randomColor = () => {\n  const randomInt = Math.floor(Math.random() * Math.pow(2, 32));\n  const hexString = randomInt.toString(16).padStart(8, '0');\n  return parseInt(hexString, 16);\n};\n\nconst degToRad = (deg: number) => {\n  return (Math.PI / 180) * deg;\n};\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  const node = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 1920,\n    height: 1080,\n    color: 0x000000ff,\n    parent: testRoot,\n  });\n\n  const rootRenderToTextureNode = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 1920,\n    height: 1080,\n    parent: node,\n    rtt: true,\n    zIndex: 5,\n    colorTop: 0xc0ffeeff,\n    colorBottom: 0xbada55ff,\n  });\n\n  new Array(105).fill(0).forEach((_, i) => {\n    const a = renderer.createNode({\n      parent: rootRenderToTextureNode,\n      x: (i % 15) * 120 + 120,\n      y: Math.floor(i / 15) * 120 + 150,\n      width: 120,\n      height: 120,\n      scale: 1,\n      // src: '../assets/rocko.png',\n      src: `https://picsum.photos/id/${i + 30}/120/120`,\n    });\n  });\n\n  new Array(20).fill(0).forEach((_, i) => {\n    const a = renderer.createNode({\n      x: (i % 1) * 1920,\n      y: Math.floor(i / 1) * 800,\n      width: 1920,\n      height: 1080,\n      parent: testRoot,\n      alpha: 1,\n      color: 0xffffffff,\n      // Copy source texture from rootRenderToTextureNode\n      texture: rootRenderToTextureNode.texture,\n    });\n\n    const animation = a.animate(\n      {\n        y: Math.floor(i / 1) * 800 - 15000,\n      },\n      animationSettings,\n    );\n    animation.start();\n  });\n\n  setTimeout(() => {\n    rootRenderToTextureNode.alpha = 0;\n  }, 2000);\n}\n"],"names":[],"mappings":"AAUA,MAAM,oBAAuD;AAAA,EAC3D,UAAU;AAAA,EACV,OAAO;AAAA,EACP,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,QAAQ;AACV;AAY+B,eAAA,IAAA,EAAE,UAAU,YAA6B;AAChE,QAAA,OAAO,SAAS,WAAW;AAAA,IAC/B,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,EAAA,CACT;AAEK,QAAA,0BAA0B,SAAS,WAAW;AAAA,IAClD,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,aAAa;AAAA,EAAA,CACd;AAEG,MAAA,MAAM,GAAG,EAAE,KAAK,CAAC,EAAE,QAAQ,CAAC,GAAG,MAAM;AAC7B,aAAS,WAAW;AAAA,MAC5B,QAAQ;AAAA,MACR,GAAI,IAAI,KAAM,MAAM;AAAA,MACpB,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,MAAM;AAAA,MAC9B,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA;AAAA,MAEP,KAAK,4BAA4B,IAAI,EAAE;AAAA,IAAA,CACxC;AAAA,EAAA,CACF;AAEG,MAAA,MAAM,EAAE,EAAE,KAAK,CAAC,EAAE,QAAQ,CAAC,GAAG,MAAM;AAChC,UAAA,IAAI,SAAS,WAAW;AAAA,MAC5B,GAAI,IAAI,IAAK;AAAA,MACb,GAAG,KAAK,MAAM,IAAI,CAAC,IAAI;AAAA,MACvB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA;AAAA,MAEP,SAAS,wBAAwB;AAAA,IAAA,CAClC;AAED,UAAM,YAAY,EAAE;AAAA,MAClB;AAAA,QACE,GAAG,KAAK,MAAM,IAAI,CAAC,IAAI,MAAM;AAAA,MAC/B;AAAA,MACA;AAAA,IAAA;AAEF,cAAU,MAAM;AAAA,EAAA,CACjB;AAED,aAAW,MAAM;AACf,4BAAwB,QAAQ;AAAA,KAC/B,GAAI;AACT;"}