{"version":3,"file":"no-rtt-legacy-BqMc8CnL.js","sources":["../../tests/no-rtt.ts"],"sourcesContent":["import type { ExampleSettings } from '../common/ExampleSettings.js';\nimport test from './alpha-blending.js';\ninterface AnimationExampleSettings {\n  duration: number;\n  easing: string;\n  delay: number;\n  loop: boolean;\n  stopMethod: 'reverse' | 'reset' | false;\n}\n\nconst animationSettings: Partial<AnimationExampleSettings> = {\n  duration: 14000,\n  delay: 400,\n  loop: true,\n  stopMethod: 'reverse',\n  easing: 'ease-in-out-back',\n};\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  const node = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 1920,\n    height: 1080,\n    color: 0x000000ff,\n    parent: testRoot,\n  });\n  const clippingNode = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 1920,\n    height: 1080,\n    parent: node,\n    clipping: true,\n    color: 0x00000000,\n  });\n\n  const rootRenderToTextureNode = renderer.createNode({\n    x: 0,\n    y: 0,\n    width: 1920,\n    height: 1080,\n    parent: clippingNode,\n    rtt: false,\n    zIndex: 5,\n    colorTop: 0xc0ffee00,\n    colorBottom: 0xbada5500,\n  });\n\n  new Array(2000).fill(0).forEach((_, i) => {\n    const image = i % 105;\n    const a = renderer.createNode({\n      parent: rootRenderToTextureNode,\n      x: (i % 15) * 120 + 120,\n      y: Math.floor(i / 15) * 120 + 150,\n      width: 120,\n      height: 120,\n      scale: 0.85,\n      // src: '../assets/rocko.png',\n      src: `https://picsum.photos/id/${image + 30}/120/120`,\n    });\n\n    const animation = a.animate(\n      {\n        y: Math.floor(i / 15) * 120 - 5000,\n      },\n      animationSettings,\n    );\n\n    animation.start();\n  });\n}\n"],"names":["animationSettings","duration","delay","loop","stopMethod","easing","noRtt","_0","__async","arguments","_ref","renderer","testRoot","_regeneratorRuntime","mark","_callee","node","clippingNode","rootRenderToTextureNode","wrap","_callee$","_context","prev","next","createNode","x","y","width","height","color","parent","clipping","rtt","zIndex","colorTop","colorBottom","Array","fill","forEach","_","i","image","a","Math","floor","scale","src","concat","animation","animate","start","stop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAUA,IAAMA,iBAAuD,GAAA;UAC3DC,QAAU,EAAA,IAAA;UACVC,KAAO,EAAA,GAAA;UACPC,IAAM,EAAA,IAAA;UACNC,UAAY,EAAA,SAAA;UACZC,MAAQ,EAAA;QACV,CAAA;QAEA,SAAAC,KAAAA,CAA+BC,EAAyC,EAAA;UAAzC,OAAAC,OAAA,CAAA,IAAA,EAAAC,SAAA,EAAA,UAAAC,IAAA;YAAA,IAAEC,QAAU,GAAAD,IAAA,CAAVC,QAAU;cAAAC,QAAA,GAAAF,IAAA,CAAAE,QAAA;YAAA,oBAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;cAAA,IAAAC,IAAA,EAAAC,YAAA,EAAAC,uBAAA;cAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;gBAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;kBAAA;oBACnCP,IAAA,GAAOL,SAASa,UAAW,CAAA;sBAC/BC,CAAG,EAAA,CAAA;sBACHC,CAAG,EAAA,CAAA;sBACHC,KAAO,EAAA,IAAA;sBACPC,MAAQ,EAAA,IAAA;sBACRC,KAAO,EAAA,GAAA;sBACPC,MAAQ,EAAAlB;oBAAA,CACT,CAAA;oBACKK,YAAA,GAAeN,SAASa,UAAW,CAAA;sBACvCC,CAAG,EAAA,CAAA;sBACHC,CAAG,EAAA,CAAA;sBACHC,KAAO,EAAA,IAAA;sBACPC,MAAQ,EAAA,IAAA;sBACRE,MAAQ,EAAAd,IAAA;sBACRe,QAAU,EAAA,IAAA;sBACVF,KAAO,EAAA;oBAAA,CACR,CAAA;oBAEKX,uBAAA,GAA0BP,SAASa,UAAW,CAAA;sBAClDC,CAAG,EAAA,CAAA;sBACHC,CAAG,EAAA,CAAA;sBACHC,KAAO,EAAA,IAAA;sBACPC,MAAQ,EAAA,IAAA;sBACRE,MAAQ,EAAAb,YAAA;sBACRe,GAAK,EAAA,KAAA;sBACLC,MAAQ,EAAA,CAAA;sBACRC,QAAU,EAAA,UAAA;sBACVC,WAAa,EAAA;oBAAA,CACd,CAAA;oBAEG,IAAAC,KAAA,CAAM,GAAI,CAAE,CAAAC,IAAA,CAAK,CAAC,CAAE,CAAAC,OAAA,CAAQ,UAACC,CAAA,EAAGC,CAAM,EAAA;sBACxC,IAAMC,QAAQD,CAAI,GAAA,GAAA;sBACZ,IAAAE,CAAA,GAAI/B,SAASa,UAAW,CAAA;wBAC5BM,MAAQ,EAAAZ,uBAAA;wBACRO,CAAA,EAAIe,CAAI,GAAA,EAAA,GAAM,GAAM,GAAA,GAAA;wBACpBd,GAAGiB,IAAK,CAAAC,KAAA,CAAMJ,CAAI,GAAA,EAAE,IAAI,GAAM,GAAA,GAAA;wBAC9Bb,KAAO,EAAA,GAAA;wBACPC,MAAQ,EAAA,GAAA;wBACRiB,KAAO,EAAA,IAAA;wBAAA;wBAEPC,GAAA,8BAAAC,MAAA,CAAiCN,KAAA,GAAQ,EAAE;sBAAA,CAC5C,CAAA;sBAED,IAAMO,YAAYN,CAAE,CAAAO,OAAA,CAClB;wBACEvB,GAAGiB,IAAK,CAAAC,KAAA,CAAMJ,CAAI,GAAA,EAAE,IAAI,GAAM,GAAA;sBAChC,CAAA,EACAxC,iBAAA,CACF;sBAEAgD,SAAA,CAAUE,KAAM,CAAA,CAAA;oBAAA,CACjB,CAAA;kBAAA;kBAAA;oBAAA,OAAA7B,QAAA,CAAA8B,IAAA;gBAAA;cAAA,GAAApC,OAAA;YAAA;UAAA,CACH,CAAA;QAAA;;;;"}