{"version":3,"file":"text-vertical-align-legacy-CSa0mUf7.js","sources":["../../tests/text-vertical-align.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  ITextNode,\n  ITextNodeProps,\n  RendererMain,\n} from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { paginateTestRows, type TestRow } from '../common/paginateTestRows.js';\nimport { PageContainer } from '../common/PageContainer.js';\nimport { constructTestRow } from '../common/constructTestRow.js';\n\nexport async function automation(settings: ExampleSettings) {\n  // Snapshot all the pages\n  await (await test(settings)).snapshotPages();\n}\n\nexport default async function test(settings: ExampleSettings) {\n  const { renderer } = settings;\n  const pageContainer = new PageContainer(settings, {\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    title: 'Text Vertical Align',\n  });\n\n  await paginateTestRows(pageContainer, [\n    ...generateVerticalAlignTest(renderer, 'sdf'),\n    null,\n    ...generateVerticalAlignTest(renderer, 'canvas'),\n  ]);\n\n  return pageContainer;\n}\n\nconst NODE_PROPS = {\n  color: 0x000000ff,\n  fontFamily: 'Ubuntu',\n  textRendererOverride: 'sdf',\n  fontSize: 50,\n  lineHeight: 70,\n} satisfies Partial<ITextNodeProps>;\n\nconst CONTAINER_SIZE = 200;\n\nfunction getSquare(renderer: RendererMain, node: ITextNode) {\n  const wrapper = renderer.createNode({\n    width: CONTAINER_SIZE,\n    height: CONTAINER_SIZE,\n  });\n  const line1 = renderer.createNode({\n    width: CONTAINER_SIZE,\n    height: 1,\n    color: 0x00ff00ff,\n    y: NODE_PROPS.lineHeight,\n  });\n  line1.parent = wrapper;\n  const line2 = renderer.createNode({\n    width: CONTAINER_SIZE,\n    height: 1,\n    color: 0x00ff00ff,\n    y: NODE_PROPS.lineHeight * 2,\n  });\n  line2.parent = wrapper;\n  node.parent = wrapper;\n  return wrapper;\n}\n\nfunction generateVerticalAlignTest(\n  renderer: RendererMain,\n  textRenderer: 'canvas' | 'sdf',\n): TestRow[] {\n  return [\n    {\n      title: `One Line ('verticalAlign', ${textRenderer}, fontSize = 50, lineHeight = 70)`,\n      content: async (rowNode) => {\n        const nodeProps = {\n          ...NODE_PROPS,\n          text: 'txyz',\n          textRendererOverride: textRenderer,\n        } satisfies Partial<ITextNodeProps>;\n\n        const baselineNode = renderer.createTextNode({\n          ...nodeProps,\n        });\n\n        return await constructTestRow({ renderer, rowNode }, [\n          'verticalAlign: middle\\n(default)\\n->',\n          getSquare(renderer, baselineNode),\n          'top ->',\n          getSquare(\n            renderer,\n            renderer.createTextNode({\n              ...nodeProps,\n              verticalAlign: 'top',\n            }),\n          ),\n          'bottom ->',\n          getSquare(\n            renderer,\n            renderer.createTextNode({\n              ...nodeProps,\n              verticalAlign: 'bottom',\n            }),\n          ),\n        ]);\n      },\n    },\n    {\n      title: `Two Lines ('verticalAlign', ${textRenderer}, fontSize = 50, lineHeight = 70)`,\n      content: async (rowNode) => {\n        const nodeProps = {\n          ...NODE_PROPS,\n          text: 'abcd\\ntxyz',\n          textRendererOverride: textRenderer,\n        } satisfies Partial<ITextNodeProps>;\n\n        const baselineNode = renderer.createTextNode({\n          ...nodeProps,\n        });\n\n        return await constructTestRow({ renderer, rowNode }, [\n          'verticalAlign: middle\\n(default)\\n->',\n          getSquare(renderer, baselineNode),\n          'top ->',\n          getSquare(\n            renderer,\n            renderer.createTextNode({\n              ...nodeProps,\n              verticalAlign: 'top',\n            }),\n          ),\n          'bottom ->',\n          getSquare(\n            renderer,\n            renderer.createTextNode({\n              ...nodeProps,\n              verticalAlign: 'bottom',\n            }),\n          ),\n        ]);\n      },\n    },\n  ] satisfies TestRow[];\n}\n"],"names":["automation","settings","__async","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","test","sent","snapshotPages","stop","_callee2","renderer","pageContainer","_callee2$","_context2","PageContainer","width","appWidth","height","appHeight","title","paginateTestRows","concat","_toConsumableArray","generateVerticalAlignTest","abrupt","NODE_PROPS","color","fontFamily","textRendererOverride","fontSize","lineHeight","CONTAINER_SIZE","getSquare","node","wrapper","createNode","line1","y","parent","line2","textRenderer","_this","content","rowNode","_callee3","nodeProps","baselineNode","_callee3$","_context3","__spreadProps","text","createTextNode","__spreadValues","constructTestRow","verticalAlign","_callee4","_callee4$","_context4"],"mappings":"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"}