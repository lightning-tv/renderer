{"version":3,"file":"viewport-events-legacy-D4XBvlq9.js","sources":["../../tests/viewport-events.ts"],"sourcesContent":["import type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  const degToRad = (deg: number) => {\n    return (Math.PI / 180) * deg;\n  };\n\n  const instructionText = renderer.createTextNode({\n    text: 'Press space to start animation, arrow keys to move, enter to reset',\n    fontSize: 30,\n    x: 10,\n    y: 960,\n    parent: testRoot,\n  });\n\n  const redStatus = renderer.createTextNode({\n    text: 'Red Status: ',\n    fontSize: 30,\n    x: 10,\n    y: 50,\n    parent: testRoot,\n  });\n\n  const blueStatus = renderer.createTextNode({\n    text: 'Blue Status: ',\n    fontSize: 30,\n    x: 10,\n    y: 10,\n    parent: testRoot,\n  });\n\n  const yellowStatus = renderer.createTextNode({\n    text: 'Yellow Status: ',\n    fontSize: 30,\n    x: 800,\n    y: 10,\n    parent: testRoot,\n  });\n\n  const clippingStatus = renderer.createTextNode({\n    text: 'Clipping: ON',\n    fontSize: 30,\n    x: 800,\n    y: 50,\n    parent: testRoot,\n    color: 0x00ff00ff,\n  });\n\n  const boundaryRect = renderer.createNode({\n    x: 1920 / 2 - (1920 * 0.75) / 2,\n    y: 1080 / 2 - (1080 * 0.75) / 2,\n    width: 1440,\n    height: 810,\n    color: 0x000000ff,\n    clipping: true,\n    parent: testRoot,\n  });\n\n  const redRect = renderer.createNode({\n    // skipRender: true,\n    x: 520,\n    y: 305,\n    alpha: 1,\n    width: 200,\n    height: 200,\n    color: 0xff0000ff,\n    pivot: 0,\n    parent: boundaryRect,\n  });\n\n  const yellow1Rect = renderer.createNode({\n    x: 20,\n    y: 20,\n    alpha: 1,\n    width: 20,\n    height: 20,\n    color: 0xffff00ff,\n    pivot: 0,\n    parent: redRect,\n  });\n\n  const yellow2Rect = renderer.createNode({\n    x: 50,\n    y: 50,\n    alpha: 1,\n    width: 20,\n    height: 20,\n    color: 0xffff00ff,\n    pivot: 0,\n    parent: redRect,\n  });\n\n  const yellow3Rect = renderer.createNode({\n    x: 80,\n    y: 80,\n    alpha: 1,\n    width: 20,\n    height: 20,\n    color: 0xffff00ff,\n    pivot: 0,\n    parent: redRect,\n  });\n\n  const yellow4Rect = renderer.createNode({\n    x: 110,\n    y: 110,\n    alpha: 1,\n    width: 20,\n    height: 20,\n    color: 0xffff00ff,\n    pivot: 0,\n    parent: redRect,\n  });\n\n  redRect.on('outOfBounds', () => {\n    console.log('red rect out of bounds');\n    redStatus.text = 'Red Status: rect out of bounds';\n    redStatus.color = 0xff0000ff;\n  });\n\n  redRect.on('inViewport', () => {\n    console.log('red rect in view port');\n    redStatus.text = 'Red Status: rect in view port';\n    redStatus.color = 0x00ff00ff;\n  });\n\n  redRect.on('inBounds', () => {\n    console.log('red rect inside render bounds');\n    redStatus.text = 'Red Status: rect in bounds';\n    redStatus.color = 0xffff00ff;\n  });\n\n  // yellowstate\n  // 0 : out of bounds\n  // 1 : in bounds\n  // 2 : in viewport\n  const yellowRectState = [0, 0, 0, 0];\n  const updateYellowState = (state: number, yellowIdx: number) => {\n    let stateString = '';\n    yellowRectState[yellowIdx] = state;\n\n    Array(4)\n      .fill(0)\n      .forEach((_, i) => {\n        stateString += `${yellowRectState[i]} `;\n      });\n\n    yellowStatus.text = `Yellow Status: ${stateString}`;\n  };\n\n  yellow1Rect.on('inBounds', () => {\n    console.log('yellow 1 rect inside render bounds');\n    updateYellowState(1, 0);\n  });\n\n  yellow1Rect.on('inViewport', () => {\n    console.log('yellow 1 rect in view port');\n    updateYellowState(2, 0);\n  });\n\n  yellow1Rect.on('outOfBounds', () => {\n    console.log('yellow 1 rect out of bounds');\n    updateYellowState(0, 0);\n  });\n\n  yellow2Rect.on('inBounds', () => {\n    console.log('yellow 2 rect inside render bounds');\n    updateYellowState(1, 1);\n  });\n\n  yellow2Rect.on('inViewport', () => {\n    console.log('yellow 2 rect in view port');\n    updateYellowState(2, 1);\n  });\n\n  yellow2Rect.on('outOfBounds', () => {\n    console.log('yellow 2 rect out of bounds');\n    updateYellowState(0, 1);\n  });\n\n  yellow3Rect.on('inBounds', () => {\n    console.log('yellow 3 rect inside render bounds');\n    updateYellowState(1, 2);\n  });\n\n  yellow3Rect.on('inViewport', () => {\n    console.log('yellow 3 rect in view port');\n    updateYellowState(2, 2);\n  });\n\n  yellow3Rect.on('outOfBounds', () => {\n    console.log('yellow 3 rect out of bounds');\n    updateYellowState(0, 2);\n  });\n\n  yellow4Rect.on('inBounds', () => {\n    console.log('yellow 4 rect inside render bounds');\n    updateYellowState(1, 3);\n  });\n\n  yellow4Rect.on('inViewport', () => {\n    console.log('yellow 4 rect in view port');\n    updateYellowState(2, 3);\n  });\n\n  yellow4Rect.on('outOfBounds', () => {\n    console.log('yellow 4 rect out of bounds');\n    updateYellowState(0, 3);\n  });\n\n  const blueRect = renderer.createNode({\n    x: 1920 / 2 - 200,\n    y: 100,\n    alpha: 1,\n    width: 200,\n    height: 200,\n    color: 0x0000ffff,\n    pivot: 0,\n    parent: testRoot,\n  });\n\n  blueRect.on('outOfBounds', () => {\n    console.log('blue rect ouf ot bounds');\n    blueStatus.text = 'Blue Status: blue rect out of bounds';\n    blueStatus.color = 0xff0000ff;\n  });\n\n  blueRect.on('inViewport', () => {\n    console.log('blue rect in view port');\n    blueStatus.text = 'Blue Status: blue rect in view port';\n    blueStatus.color = 0x00ff00ff;\n  });\n\n  blueRect.on('inBounds', () => {\n    console.log('blue rect inside render bounds');\n    blueStatus.text = 'Blue Status: blue rect in bounds';\n    blueStatus.color = 0xffff00ff;\n  });\n\n  let runAnimation = false;\n  const animate = async () => {\n    redRect\n      .animate(\n        {\n          x: -500,\n        },\n        {\n          duration: 4000,\n        },\n      )\n      .start();\n\n    await blueRect\n      .animate(\n        {\n          x: -1200,\n        },\n        {\n          duration: 4000,\n        },\n      )\n      .start()\n      .waitUntilStopped();\n\n    redRect.x = 1920 + 400;\n    blueRect.x = 1920 + 400;\n\n    redRect\n      .animate(\n        {\n          x: 520,\n        },\n        {\n          duration: 4000,\n        },\n      )\n      .start();\n\n    await blueRect\n      .animate(\n        {\n          x: 1920 / 2 - 200,\n        },\n        {\n          duration: 4000,\n        },\n      )\n      .start()\n      .waitUntilStopped();\n\n    if (runAnimation) {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      setTimeout(animate, 2000);\n    }\n  };\n\n  const moveModifier = 10;\n  window.onkeydown = (e) => {\n    if (e.key === ' ') {\n      runAnimation = !runAnimation;\n\n      if (runAnimation) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        animate();\n      }\n    }\n\n    if (e.key === 'ArrowRight') {\n      redRect.x += moveModifier;\n      blueRect.x += moveModifier;\n    }\n\n    if (e.key === 'ArrowLeft') {\n      redRect.x -= moveModifier;\n      blueRect.x -= moveModifier;\n    }\n\n    if (e.key === 'Enter') {\n      runAnimation = false;\n      redRect.x = 520;\n      blueRect.x = 1920 / 2 - 200;\n    }\n\n    if (e.key === 't') {\n      boundaryRect.clipping = !boundaryRect.clipping;\n\n      clippingStatus.text = boundaryRect.clipping\n        ? 'Clipping: ON'\n        : 'Clipping: OFF';\n      clippingStatus.color = boundaryRect.clipping ? 0x00ff00ff : 0xff0000ff;\n    }\n  };\n}\n"],"names":["viewportEvents","_0","__async","arguments","_ref","_this","renderer","testRoot","_regeneratorRuntime","mark","_callee2","redStatus","blueStatus","yellowStatus","clippingStatus","boundaryRect","redRect","yellow1Rect","yellow2Rect","yellow3Rect","yellow4Rect","yellowRectState","updateYellowState","blueRect","runAnimation","_animate","moveModifier","wrap","_callee2$","_context2","prev","next","createTextNode","text","fontSize","x","y","parent","color","createNode","width","height","clipping","alpha","pivot","on","console","log","state","yellowIdx","stateString","Array","fill","forEach","_","i","concat","animate","_callee","_callee$","_context","duration","start","waitUntilStopped","setTimeout","stop","window","onkeydown","e","key"],"mappings":"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"}