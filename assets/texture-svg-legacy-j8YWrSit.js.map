{"version":3,"file":"texture-svg-legacy-j8YWrSit.js","sources":["../../assets/rocko.svg","../../assets/lightning.svg","../../assets/elevator.svg","../../assets/rocko2.svg","../../tests/texture-svg.ts"],"sourcesContent":["export default \"__VITE_ASSET__GU$b1TMj__\"","export default \"__VITE_ASSET__DUUguiq5__\"","export default \"__VITE_ASSET__LgJxcj8T__\"","export default \"__VITE_ASSET__DNYB3nPF__\"","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  type INode,\n  type Dimensions,\n  type NodeLoadedEventHandler,\n  type NodeFailedEventHandler,\n  Texture,\n} from '@lightningjs/renderer';\nimport rockoSvg from '../assets/rocko.svg';\nimport lightning from '../assets/lightning.svg';\nimport elevatorSvg from '../assets/elevator.svg';\nimport rockoSvg2 from '../assets/rocko2.svg';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport async function automation(settings: ExampleSettings) {\n  await test(settings);\n  await settings.snapshot();\n}\n\nexport default async function test({ renderer, testRoot }: ExampleSettings) {\n  const FONT_SIZE = 45;\n  const BEGIN_Y = FONT_SIZE;\n\n  const header = renderer.createTextNode({\n    fontFamily: 'Ubuntu',\n    text: `SVG Test`,\n    fontSize: FONT_SIZE,\n    parent: testRoot,\n  });\n\n  const curX = 0;\n  let curY = BEGIN_Y;\n  let curTest = 1;\n\n  const rocko = renderer.createNode({\n    x: curX,\n    y: curY,\n    src: rockoSvg,\n    parent: testRoot,\n  });\n\n  await execLoadingTest(rocko, 181, 218);\n\n  const elevator = renderer.createNode({\n    x: curX,\n    y: curY,\n    src: elevatorSvg,\n    parent: testRoot,\n  });\n\n  await execLoadingTest(elevator, 200, 268);\n\n  const lightningNode = renderer.createNode({\n    x: curX,\n    y: curY,\n    src: lightning,\n    height: 25,\n    width: 125,\n    parent: testRoot,\n  });\n\n  await execLoadingTest(lightningNode, 125, 25);\n\n  const partialSvg = renderer.createNode({\n    x: curX,\n    y: curY,\n    src: rockoSvg2,\n    srcX: 100,\n    srcY: 0,\n    srcHeight: 218,\n    srcWidth: 81,\n    parent: testRoot,\n  });\n\n  await execLoadingTest(partialSvg, 81, 218);\n\n  // Test: Check that we capture a texture load failure\n  const failure = renderer.createNode({\n    x: curX,\n    y: curY,\n    src: 'does-not-exist.svg',\n    parent: testRoot,\n  });\n\n  await execFailureTest(failure);\n\n  function waitForTxLoaded(imgNode: INode) {\n    return new Promise<Dimensions>((resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error('TIMEOUT'));\n      }, 1000);\n      imgNode.once('loaded', ((target, payload) => {\n        resolve(payload.dimensions);\n      }) satisfies NodeLoadedEventHandler);\n    });\n  }\n\n  function waitForTxFailed(imgNode: INode) {\n    return new Promise<boolean>((resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error('TIMEOUT'));\n      }, 1000);\n      imgNode.once('failed', (() => {\n        resolve(true);\n      }) satisfies NodeFailedEventHandler);\n    });\n  }\n\n  async function execLoadingTest(\n    imgNode: INode,\n    expectedWidth: number,\n    expectedHeight: number,\n  ) {\n    const textNode = renderer.createTextNode({\n      fontFamily: 'Ubuntu',\n      x: curX,\n      text: '',\n      fontSize: FONT_SIZE,\n      parent: testRoot,\n    });\n\n    let exception: string | false = false;\n    let dimensions: Dimensions = { width: 0, height: 0 };\n    try {\n      dimensions = await waitForTxLoaded(imgNode);\n    } catch (e: unknown) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      exception = (e as any)?.message ?? 'Unknown';\n    }\n\n    imgNode.width = dimensions.width;\n    imgNode.height = dimensions.height;\n\n    textNode.y = imgNode.y + imgNode.height;\n    let result = 'Fail';\n    let expectedPostfix = '';\n    if (\n      !exception &&\n      imgNode.width === expectedWidth &&\n      imgNode.height === expectedHeight\n    ) {\n      textNode.color = 0x00ff00ff;\n      result = 'Pass';\n    } else {\n      textNode.color = 0xff0000ff;\n      if (exception) {\n        expectedPostfix = ` (exception: ${exception})`;\n      } else {\n        expectedPostfix = ` (expected ${expectedWidth}x${expectedHeight})`;\n      }\n    }\n    textNode.text = `${curTest}. Loaded Event Test: ${result} (${imgNode.width}x${imgNode.height})${expectedPostfix}`;\n    curY = textNode.y + FONT_SIZE;\n    curTest++;\n  }\n\n  async function execFailureTest(imgNode: INode) {\n    const textNode = renderer.createTextNode({\n      fontFamily: 'Ubuntu',\n      x: curX,\n      text: '',\n      fontSize: FONT_SIZE,\n      parent: testRoot,\n    });\n\n    let failureTestPass = false;\n    let exception: string | false = false;\n    try {\n      failureTestPass = await waitForTxFailed(imgNode);\n    } catch (e: unknown) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      exception = (e as any)?.message ?? 'Unknown';\n    }\n\n    textNode.y = imgNode.y + imgNode.height;\n    let result = '';\n    if (!exception && failureTestPass) {\n      textNode.color = 0x00ff00ff;\n      result = 'Pass';\n    } else {\n      textNode.color = 0xff0000ff;\n      result = 'Fail';\n      if (exception) {\n        result += ` (exception: ${exception})`;\n      }\n    }\n    textNode.text = `${curTest}. Failure Event Test: ${result}`;\n    curY = textNode.y + FONT_SIZE;\n    curTest++;\n  }\n}\n"],"names":["rockoSvg","lightning","elevatorSvg","rockoSvg2","automation","settings","__async","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","test","snapshot","stop","_0","arguments","_ref","renderer","testRoot","_callee4","FONT_SIZE","BEGIN_Y","curX","curY","curTest","rocko","elevator","lightningNode","partialSvg","failure","waitForTxLoaded","waitForTxFailed","execLoadingTest","execFailureTest","imgNode","_callee3","_a","textNode","failureTestPass","exception","result","_callee3$","_context3","createTextNode","fontFamily","x","text","fontSize","parent","sent","t0","message","y","height","color","concat","_execLoadingTest","expectedWidth","expectedHeight","_callee2","dimensions","expectedPostfix","_callee2$","_context2","width","Promise","resolve","reject","setTimeout","Error","once","target","payload","createNode","src","_context4","srcX","srcY","srcHeight","srcWidth"],"mappings":"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"}