{"version":3,"file":"text-line-height-CbCzCPjS.js","sources":["../../tests/text-line-height.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ITextNodeProps, RendererMain } from '@lightningjs/renderer';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { paginateTestRows, type TestRow } from '../common/paginateTestRows.js';\nimport { PageContainer } from '../common/PageContainer.js';\nimport { constructTestRow } from '../common/constructTestRow.js';\n\nexport async function automation(settings: ExampleSettings) {\n  // Snapshot all the pages\n  await (await test(settings)).snapshotPages();\n}\n\nexport default async function test(settings: ExampleSettings) {\n  const { renderer } = settings;\n  const pageContainer = new PageContainer(settings, {\n    width: renderer.settings.appWidth,\n    height: renderer.settings.appHeight,\n    title: 'Text Line Height',\n  });\n\n  await paginateTestRows(pageContainer, [\n    ...generateLineHeightTest(renderer, 'sdf'),\n    ...generateLineHeightTest(renderer, 'canvas'),\n  ]);\n\n  return pageContainer;\n}\n\nconst NODE_PROPS = {\n  x: 90,\n  y: 90,\n  mount: 0.5,\n  color: 0x000000ff,\n  text: 'abcd\\ntxyz',\n  fontFamily: 'Ubuntu',\n  textRendererOverride: 'sdf',\n  fontSize: 50,\n} satisfies Partial<ITextNodeProps>;\n\nfunction generateLineHeightTest(\n  renderer: RendererMain,\n  textRenderer: 'canvas' | 'sdf',\n): TestRow[] {\n  return [\n    {\n      title: `Text Node ('lineHeight', ${textRenderer}, fontSize=50)${\n        textRenderer === 'canvas' ? ', \"BROKEN!\"' : ''\n      }`,\n      content: async (rowNode) => {\n        const nodeProps = {\n          ...NODE_PROPS,\n          textRendererOverride: textRenderer,\n        } satisfies Partial<ITextNodeProps>;\n\n        const baselineNode = renderer.createTextNode({\n          ...nodeProps,\n        });\n        // const dimensions = await waitForTextDimensions(baselineNode);\n\n        // // Get the position for the center of the container based on mount = 0\n        // const position = {\n        //   y: 100 - dimensions.height / 2,\n        // };\n\n        // baselineNode.y = position.y;\n\n        return await constructTestRow(\n          { renderer, rowNode, containerSize: 180 },\n          [\n            'lineHeight: (default)\\n->',\n            baselineNode,\n            '60 ->',\n            renderer.createTextNode({\n              ...nodeProps,\n              lineHeight: 60,\n            }),\n            '70 ->',\n            renderer.createTextNode({\n              ...nodeProps,\n              lineHeight: 70,\n            }),\n            '25 ->',\n            renderer.createTextNode({\n              ...nodeProps,\n              lineHeight: 25,\n            }),\n            '10 ->',\n            renderer.createTextNode({\n              ...nodeProps,\n              lineHeight: 10,\n            }),\n            '1 ->',\n            renderer.createTextNode({\n              ...nodeProps,\n              lineHeight: 1,\n            }),\n          ],\n        );\n      },\n    },\n  ] satisfies TestRow[];\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAsB,WAAW,UAA2B;AAAA,SAAA,QAAA,MAAA,MAAA,aAAA;AAE1D,WAAO,MAAM,KAAK,QAAQ,GAAG,cAAc;AAAA,EAAA,CAC7C;AAAA;AAEA,SAA8B,KAAK,UAA2B;AAAA,SAAA,QAAA,MAAA,MAAA,aAAA;AACtD,UAAA,EAAE,SAAa,IAAA;AACf,UAAA,gBAAgB,IAAI,cAAc,UAAU;AAAA,MAChD,OAAO,SAAS,SAAS;AAAA,MACzB,QAAQ,SAAS,SAAS;AAAA,MAC1B,OAAO;AAAA,IAAA,CACR;AAED,UAAM,iBAAiB,eAAe;AAAA,MACpC,GAAG,uBAAuB,UAAU,KAAK;AAAA,MACzC,GAAG,uBAAuB,UAAU,QAAQ;AAAA,IAAA,CAC7C;AAEM,WAAA;AAAA,EAAA,CACT;AAAA;AAEA,MAAM,aAAa;AAAA,EACjB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,sBAAsB;AAAA,EACtB,UAAU;AACZ;AAEA,SAAS,uBACP,UACA,cACW;AACJ,SAAA;AAAA,IACL;AAAA,MACE,OAAO,4BAA4B,qBAAY,kBAC7C,wBAAiB,WAAW,gBAAgB;AAAA,MAE9C,SAAS,CAAO,YAAY,QAAA,MAAA,MAAA,aAAA;AACpB,cAAA,YAAY,iCACb,UADa,GAAA;AAAA,UAEhB,sBAAsB;AAAA,QAAA,CACxB;AAEA,cAAM,eAAe,SAAS,eAAe,eAAA,CAAA,GACxC,SACJ,CAAA;AAUD,eAAO,MAAM;AAAA,UACX,EAAE,UAAU,SAAS,eAAe,IAAI;AAAA,UACxC;AAAA,YACE;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS,eAAe,cAAA,eAAA,CAAA,GACnB,SADmB,GAAA;AAAA,cAEtB,YAAY;AAAA,YAAA,CACb,CAAA;AAAA,YACD;AAAA,YACA,SAAS,eAAe,cAAA,eAAA,CAAA,GACnB,SADmB,GAAA;AAAA,cAEtB,YAAY;AAAA,YAAA,CACb,CAAA;AAAA,YACD;AAAA,YACA,SAAS,eAAe,cAAA,eAAA,CAAA,GACnB,SADmB,GAAA;AAAA,cAEtB,YAAY;AAAA,YAAA,CACb,CAAA;AAAA,YACD;AAAA,YACA,SAAS,eAAe,cAAA,eAAA,CAAA,GACnB,SADmB,GAAA;AAAA,cAEtB,YAAY;AAAA,YAAA,CACb,CAAA;AAAA,YACD;AAAA,YACA,SAAS,eAAe,cAAA,eAAA,CAAA,GACnB,SADmB,GAAA;AAAA,cAEtB,YAAY;AAAA,YAAA,CACb,CAAA;AAAA,UACH;AAAA,QAAA;AAAA,MACF,CACF;AAAA,IACF;AAAA,EAAA;AAEJ;"}