{"version":3,"file":"text-contain-BafDOerD.js","sources":["../../tests/text-contain.ts"],"sourcesContent":["import type { ExampleSettings } from '../common/ExampleSettings.js';\nimport { waitForLoadedDimensions } from '../common/utils.js';\n\nexport async function automation(settings: ExampleSettings) {\n  const next = await test(settings);\n  await settings.snapshot();\n  while (await next()) {\n    await settings.snapshot();\n  }\n}\n\n/**\n * Tests that text nodes with different contain settings and text renderers\n * are displayed correctly.\n *\n * Press the right arrow key to cycle through the different settings when\n * running in the browser.\n *\n * @param settings\n * @returns\n */\nexport default async function test(settings: ExampleSettings) {\n  const { renderer, testRoot } = settings;\n\n  // Set a smaller snapshot area\n  testRoot.width = 400;\n  testRoot.height = 400;\n  testRoot.color = 0xffffffff;\n\n  const textSizeAfterLoadingBg = renderer.createNode({\n    x: 5,\n    y: 5,\n    width: 0,\n    height: 0,\n    color: 0x22ff227f,\n    parent: testRoot,\n  });\n\n  const textReportedSizeBg = renderer.createNode({\n    x: textSizeAfterLoadingBg.x,\n    y: textSizeAfterLoadingBg.y,\n    width: 0,\n    height: 0,\n    color: 0xff11117f,\n    parent: testRoot,\n  });\n\n  const text1 = renderer.createTextNode({\n    x: textSizeAfterLoadingBg.x,\n    y: textSizeAfterLoadingBg.y,\n    width: 0,\n    height: 0,\n    color: 0x000000ff,\n    fontFamily: 'Ubuntu',\n    textRendererOverride: 'sdf',\n    fontSize: 20,\n    text: `Lorem ipsum dolor sit e\nConsectetur adipiscing elit. Vivamus id.\nSuspendisse sollicitudin posuere felis.\nVivamus consectetur ex magna, non mollis.`,\n    parent: testRoot,\n  });\n\n  const indexInfo = renderer.createTextNode({\n    x: testRoot.width,\n    y: testRoot.height,\n    mount: 1,\n    width: 0,\n    height: 0,\n    color: 0x000000ff,\n    fontFamily: 'Ubuntu',\n    fontSize: 20,\n    text: '1',\n    parent: testRoot,\n  });\n\n  const textSizeAfterLoadInfo = renderer.createTextNode({\n    x: testRoot.width,\n    y: testRoot.height - 20,\n    mount: 1,\n    width: 0,\n    height: 0,\n    color: 0x00ff00ff,\n    fontFamily: 'Ubuntu',\n    fontSize: 20,\n    text: '',\n    parent: testRoot,\n  });\n\n  const textReportedSizeInfo = renderer.createTextNode({\n    x: testRoot.width,\n    y: testRoot.height - 40,\n    mount: 1,\n    width: 0,\n    height: 0,\n    color: 0xff0000ff,\n    fontFamily: 'Ubuntu',\n    fontSize: 20,\n    text: '',\n    parent: testRoot,\n  });\n\n  const textSetDimsInfo = renderer.createTextNode({\n    x: testRoot.width,\n    y: testRoot.height - 60,\n    mount: 1,\n    width: 0,\n    height: 0,\n    color: 0x0000ffff,\n    fontFamily: 'Ubuntu',\n    fontSize: 20,\n    text: '',\n    parent: testRoot,\n  });\n\n  const header = renderer.createTextNode({\n    x: testRoot.width,\n    y: testRoot.height - 80,\n    mount: 1,\n    width: 0,\n    height: 0,\n    color: 0x000000ff,\n    fontFamily: 'Ubuntu',\n    fontSize: 20,\n    text: '',\n    parent: testRoot,\n  });\n\n  let i = 0;\n  const mutations = [\n    () => {\n      // SDF, contain none\n      text1.textRendererOverride = 'sdf';\n      text1.contain = 'none';\n      text1.width = 0;\n      text1.height = 0;\n    },\n    () => {\n      // SDF, contain width\n      text1.contain = 'width';\n      text1.width = 200;\n    },\n    () => {\n      // SDF, contain width (smaller)\n      text1.width = 195;\n    },\n    () => {\n      // SDF, contain both\n      text1.contain = 'both';\n      text1.height = 203;\n    },\n    () => {\n      // SDF, contain both (1 pixel larger to show another line)\n      text1.height = 204;\n    },\n    () => {\n      // Canvas, contain none\n      text1.textRendererOverride = 'canvas';\n      text1.contain = 'none';\n      text1.width = 0;\n      text1.height = 0;\n    },\n    () => {\n      // Canvas, contain width\n      text1.contain = 'width';\n      text1.width = 200;\n    },\n    () => {\n      // Canvas, contain width (smaller)\n      text1.contain = 'width';\n      text1.width = 195;\n      text1.height = 5;\n    },\n    () => {\n      // Canvas, contain both\n      text1.contain = 'both';\n      text1.height = 203;\n    },\n    () => {\n      // Canvas, contain both (1 pixel larger to show another line)\n      text1.height = 204;\n    },\n  ];\n  /**\n   * Run the next mutation in the list\n   *\n   * @param idx\n   * @returns `false` if loop is set to false and we've already gone through all mutations. Otherwise `true`.\n   */\n  async function next(loop = false, idx = i + 1): Promise<boolean> {\n    if (idx > mutations.length - 1) {\n      if (!loop) {\n        return false;\n      }\n      idx = 0;\n    }\n    i = idx;\n    mutations[i]?.();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    header.text = makeHeader(\n      text1.textRendererOverride!,\n      text1.contain,\n      text1.width,\n      text1.height,\n    );\n    indexInfo.text = (i + 1).toString();\n    textSetDimsInfo.text = `Set size: ${Math.round(text1.width)}x${Math.round(\n      text1.height,\n    )}`;\n    const dimensions = await waitForLoadedDimensions(text1);\n    textSizeAfterLoadingBg.width = text1.width;\n    textSizeAfterLoadingBg.height = text1.height;\n    textSizeAfterLoadInfo.text = `After 'loading' size: ${Math.round(\n      textSizeAfterLoadingBg.width,\n    )}x${Math.round(textSizeAfterLoadingBg.height)}`;\n    textReportedSizeBg.width = dimensions.width;\n    textReportedSizeBg.height = dimensions.height;\n    textReportedSizeInfo.text = `'loading' event size: ${Math.round(\n      textReportedSizeBg.width,\n    )}x${Math.round(textReportedSizeBg.height)}`;\n    return true;\n  }\n  await next(false, 0);\n\n  window.addEventListener('keydown', (event) => {\n    // When right arrow is pressed, call next\n    if (event.key === 'ArrowRight') {\n      next(true).catch(console.error);\n    }\n  });\n\n  return next;\n}\n\nfunction makeHeader(\n  renderer: string,\n  contain: string,\n  width: number,\n  height: number,\n) {\n  return `${renderer}, contain = ${contain}`;\n}\n"],"names":[],"mappings":"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"}