{"version":3,"file":"destroy-DGGwR_Vm.js","sources":["../../tests/destroy.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { type INode } from '@lightningjs/renderer';\nimport logo from '../assets/lightning.png';\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport async function automation(settings: ExampleSettings) {\n  const destroy = await test(settings);\n  await settings.snapshot();\n  destroy(100);\n  await settings.snapshot();\n}\n\nexport default async function test({\n  renderer,\n  testRoot,\n  automation,\n  perfMultiplier,\n}: ExampleSettings) {\n  // create 100 nodes\n  const numOuterNodes = (100 * Math.max(perfMultiplier, 1)) / 2;\n  const nodes: INode[] = [];\n\n  const bg = renderer.createNode({\n    width: 1920,\n    height: 1080,\n    color: 0xff1e293b,\n    parent: testRoot,\n  });\n\n  const gridSize = Math.ceil(Math.sqrt(numOuterNodes));\n  for (let i = 0; i < numOuterNodes; i++) {\n    const baseX = (i % gridSize) * 150;\n    const baseY = Math.floor(i / gridSize) * 60;\n\n    const node = renderer.createNode({\n      width: 125,\n      height: 25,\n      x: baseX,\n      y: baseY,\n      src: logo,\n      shader: renderer.createShader('DynamicShader', {\n        effects: [\n          {\n            type: 'radius',\n            props: {\n              radius: 50,\n            },\n          },\n        ],\n      }),\n      parent: bg,\n    });\n\n    nodes.push(node);\n\n    const textNode = renderer.createTextNode({\n      width: 125,\n      height: 25,\n      x: baseX,\n      y: baseY + 25,\n      text: 'Lightning 3',\n      color: 0xffffffff,\n      parent: bg,\n    });\n\n    nodes.push(textNode);\n  }\n\n  console.log(\n    `Created ${numOuterNodes} texture nodes and ${numOuterNodes} text nodes`,\n  );\n\n  const destroy = (amount = 10) => {\n    const nodesToDestroy = nodes.splice(0, amount);\n    nodesToDestroy.forEach((node) => {\n      node.destroy();\n    });\n\n    console.log(`Destroyed ${amount} nodes, ${nodes.length} remaining`);\n\n    if (nodes.length > 0) {\n      setTimeout(destroy, 100);\n    } else {\n      console.log('All nodes destroyed');\n    }\n  };\n\n  if (!automation) {\n    setTimeout(destroy, 100);\n  }\n\n  return destroy;\n}\n"],"names":["automation","logo"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAuBA,SAAsB,WAAW,UAA2B;AAAA,SAAA,QAAA,MAAA,MAAA,aAAA;AACpD,UAAA,UAAU,MAAM,KAAK,QAAQ;AACnC,UAAM,SAAS;AACf,YAAQ,GAAG;AACX,UAAM,SAAS;EAAS,CAC1B;AAAA;AAEA,SAA8B,KAAK,IAKf;AALe,SAAA,QAAA,MAAA,WAAA,WAAA;AAAA,IACjC;AAAA,IACA;AAAA,IACA,YAAAA;AAAAA,IACA;AAAA,EAAA,GACkB;AAElB,UAAM,gBAAiB,MAAM,KAAK,IAAI,gBAAgB,CAAC,IAAK;AAC5D,UAAM,QAAiB,CAAA;AAEjB,UAAA,KAAK,SAAS,WAAW;AAAA,MAC7B,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AAED,UAAM,WAAW,KAAK,KAAK,KAAK,KAAK,aAAa,CAAC;AACnD,aAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AAChC,YAAA,QAAS,IAAI,WAAY;AAC/B,YAAM,QAAQ,KAAK,MAAM,IAAI,QAAQ,IAAI;AAEnC,YAAA,OAAO,SAAS,WAAW;AAAA,QAC/B,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,GAAG;AAAA,QACH,GAAG;AAAA,QACH,KAAKC;AAAAA,QACL,QAAQ,SAAS,aAAa,iBAAiB;AAAA,UAC7C,SAAS;AAAA,YACP;AAAA,cACE,MAAM;AAAA,cACN,OAAO;AAAA,gBACL,QAAQ;AAAA,cACV;AAAA,YACF;AAAA,UACF;AAAA,QAAA,CACD;AAAA,QACD,QAAQ;AAAA,MAAA,CACT;AAED,YAAM,KAAK,IAAI;AAET,YAAA,WAAW,SAAS,eAAe;AAAA,QACvC,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,GAAG;AAAA,QACH,GAAG,QAAQ;AAAA,QACX,MAAM;AAAA,QACN,OAAO;AAAA,QACP,QAAQ;AAAA,MAAA,CACT;AAED,YAAM,KAAK,QAAQ;AAAA,IACrB;AAEQ,YAAA;AAAA,MACN,WAAW,sBAAa,uBAAsB,sBAAa;AAAA,IAAA;AAGvD,UAAA,UAAU,CAAC,SAAS,OAAO;AAC/B,YAAM,iBAAiB,MAAM,OAAO,GAAG,MAAM;AAC9B,qBAAA,QAAQ,CAAC,SAAS;AAC/B,aAAK,QAAQ;AAAA,MAAA,CACd;AAED,cAAQ,IAAI,aAAa,eAAM,YAAW,aAAM,QAAM,aAAY;AAE9D,UAAA,MAAM,SAAS,GAAG;AACpB,mBAAW,SAAS,GAAG;AAAA,MAAA,OAClB;AACL,gBAAQ,IAAI,qBAAqB;AAAA,MACnC;AAAA,IAAA;AAGF,QAAI,CAACD,aAAY;AACf,iBAAW,SAAS,GAAG;AAAA,IACzB;AAEO,WAAA;AAAA,EAAA,CACT;AAAA;"}