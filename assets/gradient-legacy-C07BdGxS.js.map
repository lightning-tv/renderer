{"version":3,"file":"gradient-legacy-C07BdGxS.js","sources":["../../tests/gradient.ts"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ExampleSettings } from '../common/ExampleSettings.js';\n\nexport default async function ({ renderer, testRoot }: ExampleSettings) {\n  const elements = [\n    'colorTl',\n    'colorTr',\n    'colorBl',\n    'colorBr',\n    'colorTop',\n    'colorBottom',\n    'colorLeft',\n    'colorRight',\n    'color',\n  ];\n\n  const nodes = elements.map((element, idx) => {\n    return renderer.createNode({\n      x: (idx % 4) * 300 + 100,\n      y: Math.floor(idx / 4) * 300 + 100,\n      width: 250,\n      height: 250,\n      color: 0x000000ff,\n      [element]: 0xff0000ff,\n      parent: testRoot,\n    });\n  });\n\n  setTimeout(() => {\n    nodes.forEach((node, idx) => {\n      node\n        .animate(\n          {\n            [elements[idx] ?? 'color']: 0x00ff00ff,\n          },\n          {\n            duration: 1000,\n          },\n        )\n        .start();\n    });\n  }, 2000);\n  /*\n   * End: Sprite Map Demo\n   */\n  console.log('ready!');\n}\n"],"names":["gradient","_0","__async","arguments","_ref","renderer","testRoot","_regeneratorRuntime","mark","_callee","elements","nodes","wrap","_callee$","_context","prev","next","map","element","idx","createNode","_defineProperty","x","y","Math","floor","width","height","color","setTimeout","forEach","node","_a","animate","duration","start","console","log","stop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAqBA,SAAAA,QAAAA,CAA+BC,EAAyC,EAAA;UAAzC,OAAAC,OAAA,CAAA,IAAA,EAAAC,SAAA,EAAA,UAAAC,IAAA;YAAA,IAAEC,QAAU,GAAAD,IAAA,CAAVC,QAAU;cAAAC,QAAA,GAAAF,IAAA,CAAAE,QAAA;YAAA,oBAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;cAAA,IAAAC,QAAA,EAAAC,KAAA;cAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;gBAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;kBAAA;oBACnCN,QAAW,GAAA,CACf,SAAA,EACA,SAAA,EACA,SAAA,EACA,SAAA,EACA,UAAA,EACA,aAAA,EACA,WAAA,EACA,YAAA,EACA,OAAA,CACF;oBAEMC,KAAQ,GAAAD,QAAA,CAASO,GAAI,CAAA,UAACC,SAASC,GAAQ,EAAA;sBAC3C,OAAOd,SAASe,UAAW,CAAAC,eAAA,CAAAA,eAAA;wBACzBC,CAAA,EAAIH,GAAM,GAAA,CAAA,GAAK,GAAM,GAAA,GAAA;wBACrBI,GAAGC,IAAK,CAAAC,KAAA,CAAMN,GAAM,GAAA,CAAC,IAAI,GAAM,GAAA,GAAA;wBAC/BO,KAAO,EAAA,GAAA;wBACPC,MAAQ,EAAA,GAAA;wBACRC,KAAO,EAAA;sBAAA,GACNV,OAAO,EAAG,UAAA,aACHZ,QAAA,CACT,CAAA;oBAAA,CACF,CAAA;oBAEDuB,UAAA,CAAW,YAAM;sBACTlB,KAAA,CAAAmB,OAAA,CAAQ,UAACC,IAAA,EAAMZ,GAAQ,EAAA;wBA/CjC,IAAAa,EAAA;wBAiDSD,IAAA,CAAAE,OAAA,CAAAZ,eAAA,MAEIW,EAAS,GAAAtB,QAAA,CAAAS,GAAG,CAAZ,KAAA,IAAA,GAAAa,EAAA,GAAiB,OAAO,EAAG,QAAA,GAE9B;0BACEE,QAAU,EAAA;wBACZ,GAEDC,KAAM,CAAA,CAAA;sBAAA,CACV,CAAA;uBACA,GAAI,CAAA;oBAIPC,OAAA,CAAQC,IAAI,QAAQ,CAAA;kBAAA;kBAAA;oBAAA,OAAAvB,QAAA,CAAAwB,IAAA;gBAAA;cAAA,GAAA7B,OAAA;YAAA;UAAA,CACtB,CAAA;QAAA;;;;"}